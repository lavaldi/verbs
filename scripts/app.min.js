"use strict"; !function () { var l = { isLoading: !0, spinner: document.querySelector(".js-loader"), cardTemplate: document.querySelector(".js-card-template"), container: document.querySelector(".js-main"), searchInput: document.getElementById("searchVerb") }; document.getElementById("searchVerb").addEventListener("keyup", function () { l.updateCardsToShow() }), l.showCards = function (e) { var t = !0, s = !1, n = void 0; try { for (var i, r = e[Symbol.iterator](); !(t = (i = r.next()).done); t = !0) { var a = i.value, o = l.cardTemplate.cloneNode(!0); o.classList.remove("js-card-template"), o.removeAttribute("hidden"), o.querySelector(".js-base-form-value").textContent = a.baseForm, o.querySelector(".js-past-form-value").textContent = a.pastForm, o.querySelector(".js-past-participle-form-value").textContent = a.pastParticipleForm, o.querySelector(".js-s-es-ies-value").textContent = a.sEsIesForm, o.querySelector(".js-ing-form-value").textContent = a.ingForm, l.container.appendChild(o) } } catch (e) { s = !0, n = e } finally { try { !t && r.return && r.return() } finally { if (s) throw n } } l.isLoading && (l.spinner.setAttribute("hidden", !0), l.container.removeAttribute("hidden"), l.isLoading = !1) }, l.updateCardsToShow = function () { var e = l.searchInput.value.toUpperCase(); l.searchInCards(e) }, l.searchInCards = function (e) { var t = document.querySelectorAll(".js-card"), s = !0, n = !1, i = void 0; try { for (var r, a = t[Symbol.iterator](); !(s = (r = a.next()).done); s = !0) { var o = r.value; 0 <= o.getElementsByClassName("js-base-form-value")[0].innerHTML.toUpperCase().indexOf(e) ? o.style.display = "block" : o.style.display = "none" } } catch (e) { n = !0, i = e } finally { try { !s && a.return && a.return() } finally { if (n) throw i } } }, l.getForecast = function () { var t = new XMLHttpRequest; t.onreadystatechange = function () { if (t.readyState === XMLHttpRequest.DONE && 200 === t.status) { var e = JSON.parse(t.response); window.localforage.setItem("verbs", e), l.showCards(e) } }, t.open("GET", "/db/verbs.json"), t.send() }, document.addEventListener("DOMContentLoaded", function () { window.localforage.getItem("verbs", function (e, t) { t ? l.showCards(t) : l.getForecast() }) }), "serviceWorker" in navigator && navigator.serviceWorker.register("/service-worker.js").then(function () { console.info("Service Worker Registered") }) }(), function (e) { if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else { ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).localforage = e() } }(function () { return function r(a, o, l) { function d(t, e) { if (!o[t]) { if (!a[t]) { var s = "function" == typeof require && require; if (!e && s) return s(t, !0); if (c) return c(t, !0); var n = new Error("Cannot find module '" + t + "'"); throw n.code = "MODULE_NOT_FOUND", n } var i = o[t] = { exports: {} }; a[t][0].call(i.exports, function (e) { return d(a[t][1][e] || e) }, i, i.exports, r, a, o, l) } return o[t].exports } for (var c = "function" == typeof require && require, e = 0; e < l.length; e++)d(l[e]); return d }({ 1: [function (e, c, t) { (function (t) { function s() { l = !0; for (var e, t, s = d.length; s;) { for (t = d, d = [], e = -1; ++e < s;)t[e](); s = d.length } l = !1 } var n, e = t.MutationObserver || t.WebKitMutationObserver; if (e) { var i = 0, r = new e(s), a = t.document.createTextNode(""); r.observe(a, { characterData: !0 }), n = function () { a.data = i = ++i % 2 } } else if (t.setImmediate || void 0 === t.MessageChannel) n = "document" in t && "onreadystatechange" in t.document.createElement("script") ? function () { var e = t.document.createElement("script"); e.onreadystatechange = function () { s(), e.onreadystatechange = null, e.parentNode.removeChild(e), e = null }, t.document.documentElement.appendChild(e) } : function () { setTimeout(s, 0) }; else { var o = new t.MessageChannel; o.port1.onmessage = s, n = function () { o.port2.postMessage(0) } } var l, d = []; c.exports = function (e) { 1 !== d.push(e) || l || n() } }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}) }, {}], 2: [function (e, t, s) { function d() { } function n(e) { if ("function" != typeof e) throw new TypeError("resolver must be a function"); this.state = p, this.queue = [], this.outcome = void 0, e !== d && o(this, e) } function i(e, t, s) { this.promise = e, "function" == typeof t && (this.onFulfilled = t, this.callFulfilled = this.otherCallFulfilled), "function" == typeof s && (this.onRejected = s, this.callRejected = this.otherCallRejected) } function r(t, s, n) { c(function () { var e; try { e = s(n) } catch (e) { return h.reject(t, e) } e === t ? h.reject(t, new TypeError("Cannot resolve promise with itself")) : h.resolve(t, e) }) } function a(e) { var t = e && e.then; if (e && ("object" == typeof e || "function" == typeof e) && "function" == typeof t) return function () { t.apply(e, arguments) } } function o(t, e) { function s(e) { i || (i = !0, h.reject(t, e)) } function n(e) { i || (i = !0, h.resolve(t, e)) } var i = !1, r = l(function () { e(n, s) }); "error" === r.status && s(r.value) } function l(e, t) { var s = {}; try { s.value = e(t), s.status = "success" } catch (e) { s.status = "error", s.value = e } return s } var c = e(1), h = {}, _ = ["REJECTED"], u = ["FULFILLED"], p = ["PENDING"]; (t.exports = n).prototype.catch = function (e) { return this.then(null, e) }, n.prototype.then = function (e, t) { if ("function" != typeof e && this.state === u || "function" != typeof t && this.state === _) return this; var s = new this.constructor(d); return this.state !== p ? r(s, this.state === u ? e : t, this.outcome) : this.queue.push(new i(s, e, t)), s }, i.prototype.callFulfilled = function (e) { h.resolve(this.promise, e) }, i.prototype.otherCallFulfilled = function (e) { r(this.promise, this.onFulfilled, e) }, i.prototype.callRejected = function (e) { h.reject(this.promise, e) }, i.prototype.otherCallRejected = function (e) { r(this.promise, this.onRejected, e) }, h.resolve = function (e, t) { var s = l(a, t); if ("error" === s.status) return h.reject(e, s.value); var n = s.value; if (n) o(e, n); else { e.state = u, e.outcome = t; for (var i = -1, r = e.queue.length; ++i < r;)e.queue[i].callFulfilled(t) } return e }, h.reject = function (e, t) { e.state = _, e.outcome = t; for (var s = -1, n = e.queue.length; ++s < n;)e.queue[s].callRejected(t); return e }, n.resolve = function (e) { return e instanceof this ? e : h.resolve(new this(d), e) }, n.reject = function (e) { var t = new this(d); return h.reject(t, e) }, n.all = function (e) { function t(e, t) { s.resolve(e).then(function (e) { r[t] = e, ++a !== n || i || (i = !0, h.resolve(l, r)) }, function (e) { i || (i = !0, h.reject(l, e)) }) } var s = this; if ("[object Array]" !== Object.prototype.toString.call(e)) return this.reject(new TypeError("must be an array")); var n = e.length, i = !1; if (!n) return this.resolve([]); for (var r = new Array(n), a = 0, o = -1, l = new this(d); ++o < n;)t(e[o], o); return l }, n.race = function (e) { var t = this; if ("[object Array]" !== Object.prototype.toString.call(e)) return this.reject(new TypeError("must be an array")); var s, n = e.length, i = !1; if (!n) return this.resolve([]); for (var r = -1, a = new this(d); ++r < n;)s = e[r], t.resolve(s).then(function (e) { i || (i = !0, h.resolve(a, e)) }, function (e) { i || (i = !0, h.reject(a, e)) }); return a } }, { 1: 1 }], 3: [function (t, e, s) { (function (e) { "function" != typeof e.Promise && (e.Promise = t(2)) }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}) }, { 2: 2 }], 4: [function (e, t, s) { function a(t, s) { t = t || [], s = s || {}; try { return new Blob(t, s) } catch (e) { if ("TypeError" !== e.name) throw e; for (var n = new ("undefined" != typeof BlobBuilder ? BlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder ? MozBlobBuilder : WebKitBlobBuilder), i = 0; i < t.length; i += 1)n.append(t[i]); return n.getBlob(s.type) } } function h(e, t) { t && e.then(function (e) { t(null, e) }, function (e) { t(e) }) } function l(e, t, s) { "function" == typeof t && e.then(t), "function" == typeof s && e.catch(s) } function _(e) { return "string" != typeof e && (console.warn(e + " used as a key, but it is not a string."), e = String(e)), e } function r() { if (arguments.length && "function" == typeof arguments[arguments.length - 1]) return arguments[arguments.length - 1] } function n(e) { return "boolean" == typeof O ? w.resolve(O) : (n = e, new w(function (s) { var e = n.transaction(D, k), t = a([""]); e.objectStore(D).put(t, "key"), e.onabort = function (e) { e.preventDefault(), e.stopPropagation(), s(!1) }, e.oncomplete = function () { var e = navigator.userAgent.match(/Chrome\/(\d+)/), t = navigator.userAgent.match(/Edge\//); s(t || !e || 43 <= parseInt(e[1], 10)) } }).catch(function () { return !1 })).then(function (e) { return O = e }); var n } function o(e) { var t = P[e.name], s = {}; s.promise = new w(function (e, t) { s.resolve = e, s.reject = t }), t.deferredOperations.push(s), t.dbReady ? t.dbReady = t.dbReady.then(function () { return s.promise }) : t.dbReady = s.promise } function d(e) { var t = P[e.name].deferredOperations.pop(); if (t) return t.resolve(), t.promise } function c(e, t) { var s = P[e.name].deferredOperations.pop(); if (s) return s.reject(t), s.promise } function i(i, r) { return new w(function (e, t) { if (P[i.name] = P[i.name] || { forages: [], db: null, dbReady: null, deferredOperations: [] }, i.db) { if (!r) return e(i.db); o(i), i.db.close() } var s = [i.name]; r && s.push(i.version); var n = N.open.apply(N, s); r && (n.onupgradeneeded = function (e) { var t = n.result; try { t.createObjectStore(i.storeName), e.oldVersion <= 1 && t.createObjectStore(D) } catch (t) { if ("ConstraintError" !== t.name) throw t; console.warn('The database "' + i.name + '" has been upgraded from version ' + e.oldVersion + " to version " + e.newVersion + ', but the storage "' + i.storeName + '" already exists.') } }), n.onerror = function (e) { e.preventDefault(), t(n.error) }, n.onsuccess = function () { e(n.result), d(i) } }) } function u(e) { return i(e, !1) } function p(e) { return i(e, !0) } function f(e, t) { if (!e.db) return !0; var s = !e.db.objectStoreNames.contains(e.storeName), n = e.version < e.db.version, i = e.version > e.db.version; if (n && (e.version !== t && console.warn('The database "' + e.name + "\" can't be downgraded from version " + e.db.version + " to version " + e.version + "."), e.version = e.db.version), i || s) { if (s) { var r = e.db.version + 1; r > e.version && (e.version = r) } return !0 } return !1 } function m(e) { return a([function (e) { for (var t = e.length, s = new ArrayBuffer(t), n = new Uint8Array(s), i = 0; i < t; i++)n[i] = e.charCodeAt(i); return s }(atob(e.data))], { type: e.type }) } function C(e) { return e && e.__local_forage_encoded_blob } function E(e) { var t = this, s = t._initReady().then(function () { var e = P[t._dbInfo.name]; if (e && e.dbReady) return e.dbReady }); return l(s, e, e), s } function v(e, t, s, n) { void 0 === n && (n = 1); try { var i = e.db.transaction(e.storeName, t); s(null, i) } catch (i) { if (0 < n && (!e.db || "InvalidStateError" === i.name || "NotFoundError" === i.name)) return w.resolve().then(function () { if (!e.db || "NotFoundError" === i.name && !e.db.objectStoreNames.contains(e.storeName) && e.version <= e.db.version) return e.db && (e.version = e.db.version + 1), p(e) }).then(function () { return function (s) { o(s); for (var n = P[s.name], i = n.forages, e = 0; e < i.length; e++) { var t = i[e]; t._dbInfo.db && (t._dbInfo.db.close(), t._dbInfo.db = null) } return s.db = null, u(s).then(function (e) { return s.db = e, f(s) ? p(s) : e }).then(function (e) { s.db = n.db = e; for (var t = 0; t < i.length; t++)i[t]._dbInfo.db = e }).catch(function (e) { throw c(s, e), e }) }(e).then(function () { v(e, t, s, n - 1) }) }).catch(s); s(i) } } function b(e) { var t, s, n, i, r, a = .75 * e.length, o = e.length, l = 0; "=" === e[e.length - 1] && (a-- , "=" === e[e.length - 2] && a--); var d = new ArrayBuffer(a), c = new Uint8Array(d); for (t = 0; t < o; t += 4)s = H.indexOf(e[t]), n = H.indexOf(e[t + 1]), i = H.indexOf(e[t + 2]), r = H.indexOf(e[t + 3]), c[l++] = s << 2 | n >> 4, c[l++] = (15 & n) << 4 | i >> 2, c[l++] = (3 & i) << 6 | 63 & r; return d } function y(e) { var t, s = new Uint8Array(e), n = ""; for (t = 0; t < s.length; t += 3)n += H[s[t] >> 2], n += H[(3 & s[t]) << 4 | s[t + 1] >> 4], n += H[(15 & s[t + 1]) << 2 | s[t + 2] >> 6], n += H[63 & s[t + 2]]; return s.length % 3 == 2 ? n = n.substring(0, n.length - 1) + "=" : s.length % 3 == 1 && (n = n.substring(0, n.length - 2) + "=="), n } function I(e, t, s, n) { e.executeSql("CREATE TABLE IF NOT EXISTS " + t.storeName + " (id INTEGER PRIMARY KEY, key unique, value)", [], s, n) } function L(e, n, i, r, a, o) { e.executeSql(i, r, a, function (e, s) { s.code === s.SYNTAX_ERR ? e.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?", [n.storeName], function (e, t) { t.rows.length ? o(e, s) : I(e, n, function () { e.executeSql(i, r, a, o) }, o) }, o) : o(e, s) }, o) } function g(e, t) { var s = e.name + "/"; return e.storeName !== t.storeName && (s += e.storeName + "/"), s } function S() { return !function () { var e = "_localforage_support_test"; try { return localStorage.setItem(e, !0), localStorage.removeItem(e), !1 } catch (e) { return !0 } }() || 0 < localStorage.length } function A(t, s) { t[s] = function () { var e = arguments; return t.ready().then(function () { return t[s].apply(t, e) }) } } function T() { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; if (t) for (var s in t) t.hasOwnProperty(s) && (J(t[s]) ? arguments[0][s] = t[s].slice() : arguments[0][s] = t[s]) } return arguments[0] } var R = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, N = function () { try { if ("undefined" != typeof indexedDB) return indexedDB; if ("undefined" != typeof webkitIndexedDB) return webkitIndexedDB; if ("undefined" != typeof mozIndexedDB) return mozIndexedDB; if ("undefined" != typeof OIndexedDB) return OIndexedDB; if ("undefined" != typeof msIndexedDB) return msIndexedDB } catch (e) { return } }(); "undefined" == typeof Promise && e(3); var w = Promise, D = "local-forage-detect-blob-support", O = void 0, P = {}, M = Object.prototype.toString, B = "readonly", k = "readwrite", F = { _driver: "asyncStorage", _initStorage: function (e) { function t() { return w.resolve() } var n = this, i = { db: null }; if (e) for (var s in e) i[s] = e[s]; var r = P[i.name]; r || (r = { forages: [], db: null, dbReady: null, deferredOperations: [] }, P[i.name] = r), r.forages.push(n), n._initReady || (n._initReady = n.ready, n.ready = E); for (var a = [], o = 0; o < r.forages.length; o++) { var l = r.forages[o]; l !== n && a.push(l._initReady().catch(t)) } var d = r.forages.slice(0); return w.all(a).then(function () { return i.db = r.db, u(i) }).then(function (e) { return i.db = e, f(i, n._defaultConfig.version) ? p(i) : e }).then(function (e) { i.db = r.db = e, n._dbInfo = i; for (var t = 0; t < d.length; t++) { var s = d[t]; s !== n && (s._dbInfo.db = i.db, s._dbInfo.version = i.version) } }) }, _support: function () { try { if (!N) return !1; var e = "undefined" != typeof openDatabase && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform), t = "function" == typeof fetch && -1 !== fetch.toString().indexOf("[native code"); return (!e || t) && "undefined" != typeof indexedDB && "undefined" != typeof IDBKeyRange } catch (e) { return !1 } }(), iterate: function (a, e) { var o = this, t = new w(function (r, s) { o.ready().then(function () { v(o._dbInfo, B, function (e, t) { if (e) return s(e); try { var n = t.objectStore(o._dbInfo.storeName).openCursor(), i = 1; n.onsuccess = function () { var e = n.result; if (e) { var t = e.value; C(t) && (t = m(t)); var s = a(t, e.key, i++); void 0 !== s ? r(s) : e.continue() } else r() }, n.onerror = function () { s(n.error) } } catch (e) { s(e) } }) }).catch(s) }); return h(t, e), t }, getItem: function (r, e) { var a = this; r = _(r); var t = new w(function (n, i) { a.ready().then(function () { v(a._dbInfo, B, function (e, t) { if (e) return i(e); try { var s = t.objectStore(a._dbInfo.storeName).get(r); s.onsuccess = function () { var e = s.result; void 0 === e && (e = null), C(e) && (e = m(e)), n(e) }, s.onerror = function () { i(s.error) } } catch (e) { i(e) } }) }).catch(i) }); return h(t, e), t }, setItem: function (o, t, e) { var l = this; o = _(o); var s = new w(function (r, a) { var e; l.ready().then(function () { return e = l._dbInfo, "[object Blob]" === M.call(t) ? n(e.db).then(function (e) { return e ? t : (n = t, new w(function (s, e) { var t = new FileReader; t.onerror = e, t.onloadend = function (e) { var t = btoa(e.target.result || ""); s({ __local_forage_encoded_blob: !0, data: t, type: n.type }) }, t.readAsBinaryString(n) })); var n }) : t }).then(function (i) { v(l._dbInfo, k, function (e, t) { if (e) return a(e); try { var s = t.objectStore(l._dbInfo.storeName); null === i && (i = void 0); var n = s.put(i, o); t.oncomplete = function () { void 0 === i && (i = null), r(i) }, t.onabort = t.onerror = function () { var e = n.error ? n.error : n.transaction.error; a(e) } } catch (e) { a(e) } }) }).catch(a) }); return h(s, e), s }, removeItem: function (r, e) { var a = this; r = _(r); var t = new w(function (n, i) { a.ready().then(function () { v(a._dbInfo, k, function (e, t) { if (e) return i(e); try { var s = t.objectStore(a._dbInfo.storeName).delete(r); t.oncomplete = function () { n() }, t.onerror = function () { i(s.error) }, t.onabort = function () { var e = s.error ? s.error : s.transaction.error; i(e) } } catch (e) { i(e) } }) }).catch(i) }); return h(t, e), t }, clear: function (e) { var r = this, t = new w(function (n, i) { r.ready().then(function () { v(r._dbInfo, k, function (e, t) { if (e) return i(e); try { var s = t.objectStore(r._dbInfo.storeName).clear(); t.oncomplete = function () { n() }, t.onabort = t.onerror = function () { var e = s.error ? s.error : s.transaction.error; i(e) } } catch (e) { i(e) } }) }).catch(i) }); return h(t, e), t }, length: function (e) { var r = this, t = new w(function (n, i) { r.ready().then(function () { v(r._dbInfo, B, function (e, t) { if (e) return i(e); try { var s = t.objectStore(r._dbInfo.storeName).count(); s.onsuccess = function () { n(s.result) }, s.onerror = function () { i(s.error) } } catch (e) { i(e) } }) }).catch(i) }); return h(t, e), t }, key: function (o, e) { var l = this, t = new w(function (r, a) { o < 0 ? r(null) : l.ready().then(function () { v(l._dbInfo, B, function (e, t) { if (e) return a(e); try { var s = t.objectStore(l._dbInfo.storeName), n = !1, i = s.openCursor(); i.onsuccess = function () { var e = i.result; e ? 0 === o ? r(e.key) : n ? r(e.key) : (n = !0, e.advance(o)) : r(null) }, i.onerror = function () { a(i.error) } } catch (e) { a(e) } }) }).catch(a) }); return h(t, e), t }, keys: function (e) { var a = this, t = new w(function (i, r) { a.ready().then(function () { v(a._dbInfo, B, function (e, t) { if (e) return r(e); try { var s = t.objectStore(a._dbInfo.storeName).openCursor(), n = []; s.onsuccess = function () { var e = s.result; e ? (n.push(e.key), e.continue()) : i(n) }, s.onerror = function () { r(s.error) } } catch (e) { r(e) } }) }).catch(r) }); return h(t, e), t }, dropInstance: function (a, e) { e = r.apply(this, arguments); var t, s = this.config(); if ((a = "function" != typeof a && a || {}).name || (a.name = a.name || s.name, a.storeName = a.storeName || s.storeName), a.name) { var n = a.name === s.name && this._dbInfo.db ? w.resolve(this._dbInfo.db) : u(a).then(function (e) { var t = P[a.name], s = t.forages; t.db = e; for (var n = 0; n < s.length; n++)s[n]._dbInfo.db = e; return e }); t = a.storeName ? n.then(function (e) { if (e.objectStoreNames.contains(a.storeName)) { var i = e.version + 1; o(a); var n = P[a.name], r = n.forages; e.close(); for (var t = 0; t < r.length; t++) { var s = r[t]; s._dbInfo.db = null, s._dbInfo.version = i } return new w(function (t, s) { var n = N.open(a.name, i); n.onerror = function (e) { n.result.close(), s(e) }, n.onupgradeneeded = function () { n.result.deleteObjectStore(a.storeName) }, n.onsuccess = function () { var e = n.result; e.close(), t(e) } }).then(function (e) { n.db = e; for (var t = 0; t < r.length; t++) { var s = r[t]; s._dbInfo.db = e, d(s._dbInfo) } }).catch(function (e) { throw (c(a, e) || w.resolve()).catch(function () { }), e }) } }) : n.then(function (e) { o(a); var s = P[a.name], n = s.forages; e.close(); for (var t = 0; t < n.length; t++)n[t]._dbInfo.db = null; return new w(function (t, s) { var n = N.deleteDatabase(a.name); n.onerror = n.onblocked = function (e) { var t = n.result; t && t.close(), s(e) }, n.onsuccess = function () { var e = n.result; e && e.close(), t(e) } }).then(function (e) { s.db = e; for (var t = 0; t < n.length; t++)d(n[t]._dbInfo) }).catch(function (e) { throw (c(a, e) || w.resolve()).catch(function () { }), e }) }) } else t = w.reject("Invalid arguments"); return h(t, e), t } }, H = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", x = /^~~local_forage_type~([^~]+)~/, U = "__lfsc__:", j = U.length, G = "arbf", q = "blob", W = j + G.length, V = Object.prototype.toString, K = { serialize: function (t, s) { var e = ""; if (t && (e = V.call(t)), t && ("[object ArrayBuffer]" === e || t.buffer && "[object ArrayBuffer]" === V.call(t.buffer))) { var n, i = U; t instanceof ArrayBuffer ? (n = t, i += G) : (n = t.buffer, "[object Int8Array]" === e ? i += "si08" : "[object Uint8Array]" === e ? i += "ui08" : "[object Uint8ClampedArray]" === e ? i += "uic8" : "[object Int16Array]" === e ? i += "si16" : "[object Uint16Array]" === e ? i += "ur16" : "[object Int32Array]" === e ? i += "si32" : "[object Uint32Array]" === e ? i += "ui32" : "[object Float32Array]" === e ? i += "fl32" : "[object Float64Array]" === e ? i += "fl64" : s(new Error("Failed to get type for BinaryArray"))), s(i + y(n)) } else if ("[object Blob]" === e) { var r = new FileReader; r.onload = function () { var e = "~~local_forage_type~" + t.type + "~" + y(this.result); s(U + q + e) }, r.readAsArrayBuffer(t) } else try { s(JSON.stringify(t)) } catch (e) { console.error("Couldn't convert value into a JSON string: ", t), s(null, e) } }, deserialize: function (e) { if (e.substring(0, j) !== U) return JSON.parse(e); var t, s = e.substring(W), n = e.substring(j, W); if (n === q && x.test(s)) { var i = s.match(x); t = i[1], s = s.substring(i[0].length) } var r = b(s); switch (n) { case G: return r; case q: return a([r], { type: t }); case "si08": return new Int8Array(r); case "ui08": return new Uint8Array(r); case "uic8": return new Uint8ClampedArray(r); case "si16": return new Int16Array(r); case "ur16": return new Uint16Array(r); case "si32": return new Int32Array(r); case "ui32": return new Uint32Array(r); case "fl32": return new Float32Array(r); case "fl64": return new Float64Array(r); default: throw new Error("Unkown type: " + n) } }, stringToBuffer: b, bufferToString: y }, z = { _driver: "webSQLStorage", _initStorage: function (e) { var n = this, i = { db: null }; if (e) for (var t in e) i[t] = "string" != typeof e[t] ? e[t].toString() : e[t]; var s = new w(function (t, s) { try { i.db = openDatabase(i.name, String(i.version), i.description, i.size) } catch (t) { return s(t) } i.db.transaction(function (e) { I(e, i, function () { n._dbInfo = i, t() }, function (e, t) { s(t) }) }, s) }); return i.serializer = K, s }, _support: "function" == typeof openDatabase, iterate: function (d, e) { var t = this, s = new w(function (l, s) { t.ready().then(function () { var o = t._dbInfo; o.db.transaction(function (e) { L(e, o, "SELECT * FROM " + o.storeName, [], function (e, t) { for (var s = t.rows, n = s.length, i = 0; i < n; i++) { var r = s.item(i), a = r.value; if (a && (a = o.serializer.deserialize(a)), void 0 !== (a = d(a, r.key, i + 1))) return void l(a) } l() }, function (e, t) { s(t) }) }) }).catch(s) }); return h(s, e), s }, getItem: function (t, e) { var r = this; t = _(t); var s = new w(function (i, s) { r.ready().then(function () { var n = r._dbInfo; n.db.transaction(function (e) { L(e, n, "SELECT * FROM " + n.storeName + " WHERE key = ? LIMIT 1", [t], function (e, t) { var s = t.rows.length ? t.rows.item(0).value : null; s && (s = n.serializer.deserialize(s)), i(s) }, function (e, t) { s(t) }) }) }).catch(s) }); return h(s, e), s }, setItem: function (e, t, s) { return function a(o, e, l, d) { var c = this; o = _(o); var t = new w(function (i, r) { c.ready().then(function () { void 0 === e && (e = null); var s = e, n = c._dbInfo; n.serializer.serialize(e, function (t, e) { e ? r(e) : n.db.transaction(function (e) { L(e, n, "INSERT OR REPLACE INTO " + n.storeName + " (key, value) VALUES (?, ?)", [o, t], function () { i(s) }, function (e, t) { r(t) }) }, function (e) { if (e.code === e.QUOTA_ERR) { if (0 < d) return void i(a.apply(c, [o, s, l, d - 1])); r(e) } }) }) }).catch(r) }); return h(t, l), t }.apply(this, [e, t, s, 1]) }, removeItem: function (i, e) { var r = this; i = _(i); var t = new w(function (s, n) { r.ready().then(function () { var t = r._dbInfo; t.db.transaction(function (e) { L(e, t, "DELETE FROM " + t.storeName + " WHERE key = ?", [i], function () { s() }, function (e, t) { n(t) }) }) }).catch(n) }); return h(t, e), t }, clear: function (e) { var i = this, t = new w(function (s, n) { i.ready().then(function () { var t = i._dbInfo; t.db.transaction(function (e) { L(e, t, "DELETE FROM " + t.storeName, [], function () { s() }, function (e, t) { n(t) }) }) }).catch(n) }); return h(t, e), t }, length: function (e) { var i = this, t = new w(function (n, s) { i.ready().then(function () { var t = i._dbInfo; t.db.transaction(function (e) { L(e, t, "SELECT COUNT(key) as c FROM " + t.storeName, [], function (e, t) { var s = t.rows.item(0).c; n(s) }, function (e, t) { s(t) }) }) }).catch(s) }); return h(t, e), t }, key: function (i, e) { var r = this, t = new w(function (n, s) { r.ready().then(function () { var t = r._dbInfo; t.db.transaction(function (e) { L(e, t, "SELECT key FROM " + t.storeName + " WHERE id = ? LIMIT 1", [i + 1], function (e, t) { var s = t.rows.length ? t.rows.item(0).key : null; n(s) }, function (e, t) { s(t) }) }) }).catch(s) }); return h(t, e), t }, keys: function (e) { var n = this, t = new w(function (i, s) { n.ready().then(function () { var t = n._dbInfo; t.db.transaction(function (e) { L(e, t, "SELECT key FROM " + t.storeName, [], function (e, t) { for (var s = [], n = 0; n < t.rows.length; n++)s.push(t.rows.item(n).key); i(s) }, function (e, t) { s(t) }) }) }).catch(s) }); return h(t, e), t }, dropInstance: function (s, e) { e = r.apply(this, arguments); var n = this.config(); (s = "function" != typeof s && s || {}).name || (s.name = s.name || n.name, s.storeName = s.storeName || n.storeName); var t, i = this; return h(t = s.name ? new w(function (e) { var t, r; t = s.name === n.name ? i._dbInfo.db : openDatabase(s.name, "", "", 0), e(s.storeName ? { db: t, storeNames: [s.storeName] } : (r = t, new w(function (i, s) { r.transaction(function (e) { e.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'", [], function (e, t) { for (var s = [], n = 0; n < t.rows.length; n++)s.push(t.rows.item(n).name); i({ db: r, storeNames: s }) }, function (e, t) { s(t) }) }, function (e) { s(e) }) }))) }).then(function (o) { return new w(function (r, a) { o.db.transaction(function (n) { function e(t) { return new w(function (e, s) { n.executeSql("DROP TABLE IF EXISTS " + t, [], function () { e() }, function (e, t) { s(t) }) }) } for (var t = [], s = 0, i = o.storeNames.length; s < i; s++)t.push(e(o.storeNames[s])); w.all(t).then(function () { r() }).catch(function (e) { a(e) }) }, function (e) { a(e) }) }) }) : w.reject("Invalid arguments"), e), t } }, X = { _driver: "localStorageWrapper", _initStorage: function (e) { var t = {}; if (e) for (var s in e) t[s] = e[s]; return t.keyPrefix = g(e, this._defaultConfig), S() ? ((this._dbInfo = t).serializer = K, w.resolve()) : w.reject() }, _support: function () { try { return "undefined" != typeof localStorage && "setItem" in localStorage && !!localStorage.setItem } catch (e) { return !1 } }(), iterate: function (l, e) { var d = this, t = d.ready().then(function () { for (var e = d._dbInfo, t = e.keyPrefix, s = t.length, n = localStorage.length, i = 1, r = 0; r < n; r++) { var a = localStorage.key(r); if (0 === a.indexOf(t)) { var o = localStorage.getItem(a); if (o && (o = e.serializer.deserialize(o)), void 0 !== (o = l(o, a.substring(s), i++))) return o } } }); return h(t, e), t }, getItem: function (s, e) { var n = this; s = _(s); var t = n.ready().then(function () { var e = n._dbInfo, t = localStorage.getItem(e.keyPrefix + s); return t && (t = e.serializer.deserialize(t)), t }); return h(t, e), t }, setItem: function (a, e, t) { var o = this; a = _(a); var s = o.ready().then(function () { void 0 === e && (e = null); var r = e; return new w(function (s, n) { var i = o._dbInfo; i.serializer.serialize(e, function (e, t) { if (t) n(t); else try { localStorage.setItem(i.keyPrefix + a, e), s(r) } catch (e) { "QuotaExceededError" !== e.name && "NS_ERROR_DOM_QUOTA_REACHED" !== e.name || n(e), n(e) } }) }) }); return h(s, t), s }, removeItem: function (t, e) { var s = this; t = _(t); var n = s.ready().then(function () { var e = s._dbInfo; localStorage.removeItem(e.keyPrefix + t) }); return h(n, e), n }, clear: function (e) { var n = this, t = n.ready().then(function () { for (var e = n._dbInfo.keyPrefix, t = localStorage.length - 1; 0 <= t; t--) { var s = localStorage.key(t); 0 === s.indexOf(e) && localStorage.removeItem(s) } }); return h(t, e), t }, length: function (e) { var t = this.keys().then(function (e) { return e.length }); return h(t, e), t }, key: function (s, e) { var n = this, t = n.ready().then(function () { var t, e = n._dbInfo; try { t = localStorage.key(s) } catch (e) { t = null } return t && (t = t.substring(e.keyPrefix.length)), t }); return h(t, e), t }, keys: function (e) { var r = this, t = r.ready().then(function () { for (var e = r._dbInfo, t = localStorage.length, s = [], n = 0; n < t; n++) { var i = localStorage.key(n); 0 === i.indexOf(e.keyPrefix) && s.push(i.substring(e.keyPrefix.length)) } return s }); return h(t, e), t }, dropInstance: function (t, e) { if (e = r.apply(this, arguments), !(t = "function" != typeof t && t || {}).name) { var s = this.config(); t.name = t.name || s.name, t.storeName = t.storeName || s.storeName } var n, i = this; return h(n = t.name ? new w(function (e) { e(t.storeName ? g(t, i._defaultConfig) : t.name + "/") }).then(function (e) { for (var t = localStorage.length - 1; 0 <= t; t--) { var s = localStorage.key(t); 0 === s.indexOf(e) && localStorage.removeItem(s) } }) : w.reject("Invalid arguments"), e), n } }, Y = function (e, t) { for (var s = e.length, n = 0; n < s;) { if ((i = e[n]) === (r = t) || "number" == typeof i && "number" == typeof r && isNaN(i) && isNaN(r)) return !0; n++ } var i, r; return !1 }, J = Array.isArray || function (e) { return "[object Array]" === Object.prototype.toString.call(e) }, Q = {}, Z = {}, $ = { INDEXEDDB: F, WEBSQL: z, LOCALSTORAGE: X }, ee = [$.INDEXEDDB._driver, $.WEBSQL._driver, $.LOCALSTORAGE._driver], te = ["dropInstance"], se = ["clear", "getItem", "iterate", "key", "keys", "length", "removeItem", "setItem"].concat(te), ne = { description: "", driver: ee.slice(), name: "localforage", size: 4980736, storeName: "keyvaluepairs", version: 1 }, ie = new (function () { function i(e) { for (var t in function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, i), $) if ($.hasOwnProperty(t)) { var s = $[t], n = s._driver; this[t] = n, Q[n] || this.defineDriver(s) } this._defaultConfig = T({}, ne), this._config = T({}, this._defaultConfig, e), this._driverSet = null, this._initDriver = null, this._ready = !1, this._dbInfo = null, this._wrapLibraryMethodsWithReady(), this.setDriver(this._config.driver).catch(function () { }) } return i.prototype.config = function (e) { if ("object" === (void 0 === e ? "undefined" : R(e))) { if (this._ready) return new Error("Can't call config() after localforage has been used."); for (var t in e) { if ("storeName" === t && (e[t] = e[t].replace(/\W/g, "_")), "version" === t && "number" != typeof e[t]) return new Error("Database version must be a number."); this._config[t] = e[t] } return !("driver" in e && e.driver) || this.setDriver(this._config.driver) } return "string" == typeof e ? this._config[e] : this._config }, i.prototype.defineDriver = function (d, e, t) { var s = new w(function (t, s) { try { var n = d._driver, e = new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver"); if (!d._driver) return void s(e); for (var i = se.concat("_initStorage"), r = 0, a = i.length; r < a; r++) { var o = i[r]; if ((!Y(te, o) || d[o]) && "function" != typeof d[o]) return void s(e) } !function () { for (var e = function (s) { return function () { var e = new Error("Method " + s + " is not implemented by the current driver"), t = w.reject(e); return h(t, arguments[arguments.length - 1]), t } }, t = 0, s = te.length; t < s; t++) { var n = te[t]; d[n] || (d[n] = e(n)) } }(); var l = function (e) { Q[n] && console.info("Redefining LocalForage driver: " + n), Q[n] = d, Z[n] = e, t() }; "_support" in d ? d._support && "function" == typeof d._support ? d._support().then(l, s) : l(!!d._support) : l(!0) } catch (e) { s(e) } }); return l(s, e, t), s }, i.prototype.driver = function () { return this._driver || null }, i.prototype.getDriver = function (e, t, s) { var n = Q[e] ? w.resolve(Q[e]) : w.reject(new Error("Driver not found.")); return l(n, t, s), n }, i.prototype.getSerializer = function (e) { var t = w.resolve(K); return l(t, e), t }, i.prototype.ready = function (e) { var t = this, s = t._driverSet.then(function () { return null === t._ready && (t._ready = t._initDriver()), t._ready }); return l(s, e, e), s }, i.prototype.setDriver = function (e, t, s) { function r() { o._config.driver = o.driver() } function a(e) { return o._extend(e), r(), o._ready = o._initStorage(o._config), o._ready } var o = this; J(e) || (e = [e]); var n = this._getSupportedDrivers(e), i = null !== this._driverSet ? this._driverSet.catch(function () { return w.resolve() }) : w.resolve(); return this._driverSet = i.then(function () { var e = n[0]; return o._dbInfo = null, o._ready = null, o.getDriver(e).then(function (e) { var i; o._driver = e._driver, r(), o._wrapLibraryMethodsWithReady(), o._initDriver = (i = n, function () { var n = 0; return function e() { for (; n < i.length;) { var t = i[n]; return n++ , o._dbInfo = null, o._ready = null, o.getDriver(t).then(a).catch(e) } r(); var s = new Error("No available storage method found."); return o._driverSet = w.reject(s), o._driverSet }() }) }) }).catch(function () { r(); var e = new Error("No available storage method found."); return o._driverSet = w.reject(e), o._driverSet }), l(this._driverSet, t, s), this._driverSet }, i.prototype.supports = function (e) { return !!Z[e] }, i.prototype._extend = function (e) { T(this, e) }, i.prototype._getSupportedDrivers = function (e) { for (var t = [], s = 0, n = e.length; s < n; s++) { var i = e[s]; this.supports(i) && t.push(i) } return t }, i.prototype._wrapLibraryMethodsWithReady = function () { for (var e = 0, t = se.length; e < t; e++)A(this, se[e]) }, i.prototype.createInstance = function (e) { return new i(e) }, i }()); t.exports = ie }, { 3: 3 }] }, {}, [4])(4) }), function () { function t(n, i) { if (n) { if (i.element_.classList.contains(i.CssClasses_.MDL_JS_RIPPLE_EFFECT)) { var e = document.createElement("span"); e.classList.add(i.CssClasses_.MDL_RIPPLE_CONTAINER), e.classList.add(i.CssClasses_.MDL_JS_RIPPLE_EFFECT); var t = document.createElement("span"); t.classList.add(i.CssClasses_.MDL_RIPPLE), e.appendChild(t), n.appendChild(e) } n.addEventListener("click", function (e) { if ("#" === n.getAttribute("href").charAt(0)) { e.preventDefault(); var t = n.href.split("#")[1], s = i.element_.querySelector("#" + t); i.resetTabState_(), i.resetPanelState_(), n.classList.add(i.CssClasses_.ACTIVE_CLASS), s.classList.add(i.CssClasses_.ACTIVE_CLASS) } }) } } function b(s, n, i, r) { function t() { var e = s.href.split("#")[1], t = r.content_.querySelector("#" + e); r.resetTabState_(n), r.resetPanelState_(i), s.classList.add(r.CssClasses_.IS_ACTIVE), t.classList.add(r.CssClasses_.IS_ACTIVE) } if (r.tabBar_.classList.contains(r.CssClasses_.JS_RIPPLE_EFFECT)) { var e = document.createElement("span"); e.classList.add(r.CssClasses_.RIPPLE_CONTAINER), e.classList.add(r.CssClasses_.JS_RIPPLE_EFFECT); var a = document.createElement("span"); a.classList.add(r.CssClasses_.RIPPLE), e.appendChild(a), s.appendChild(e) } r.tabBar_.classList.contains(r.CssClasses_.TAB_MANUAL_SWITCH) || s.addEventListener("click", function (e) { "#" === s.getAttribute("href").charAt(0) && (e.preventDefault(), t()) }), s.show = t } var r = { upgradeDom: function (e, t) { }, upgradeElement: function (e, t) { }, upgradeElements: function (e) { }, upgradeAllRegistered: function () { }, registerUpgradedCallback: function (e, t) { }, register: function (e) { }, downgradeElements: function (e) { } }; (r = function () { function u(e, t) { for (var s = 0; s < C.length; s++)if (C[s].className === e) return void 0 !== t && (C[s] = t), C[s]; return !1 } function p(e) { var t = e.getAttribute("data-upgraded"); return null === t ? [""] : t.split(",") } function f(e, t) { return -1 !== p(e).indexOf(t) } function m(e, t, s) { if ("CustomEvent" in window && "function" == typeof window.CustomEvent) return new CustomEvent(e, { bubbles: t, cancelable: s }); var n = document.createEvent("Events"); return n.initEvent(e, t, s), n } function o(e, t) { if (void 0 === e && void 0 === t) for (var s = 0; s < C.length; s++)o(C[s].className, C[s].cssClass); else { var n = e; if (void 0 === t) { var i = u(n); i && (t = i.cssClass) } for (var r = document.querySelectorAll("." + t), a = 0; a < r.length; a++)l(r[a], n) } } function l(t, e) { if (!("object" == typeof t && t instanceof Element)) throw new Error("Invalid argument provided to upgrade MDL element."); var s = m("mdl-componentupgrading", !0, !0); if (t.dispatchEvent(s), !s.defaultPrevented) { var n = p(t), i = []; if (e) f(t, e) || i.push(u(e)); else { var r = t.classList; C.forEach(function (e) { r.contains(e.cssClass) && -1 === i.indexOf(e) && !f(t, e.className) && i.push(e) }) } for (var a, o = 0, l = i.length; o < l; o++) { if (!(a = i[o])) throw new Error("Unable to find a registered component for the given class."); n.push(a.className), t.setAttribute("data-upgraded", n.join(",")); var d = new a.classConstructor(t); d[v] = a, E.push(d); for (var c = 0, h = a.callbacks.length; c < h; c++)a.callbacks[c](t); a.widget && (t[a.className] = d); var _ = m("mdl-componentupgraded", !0, !1); t.dispatchEvent(_) } } } function n(e) { if (e) { var t = E.indexOf(e); E.splice(t, 1); var s = e.element_.getAttribute("data-upgraded").split(","), n = s.indexOf(e[v].classAsString); s.splice(n, 1), e.element_.setAttribute("data-upgraded", s.join(",")); var i = m("mdl-componentdowngraded", !0, !1); e.element_.dispatchEvent(i) } } var C = [], E = [], v = "mdlComponentConfigInternal_"; return { upgradeDom: o, upgradeElement: l, upgradeElements: function e(t) { Array.isArray(t) || (t = t instanceof Element ? [t] : Array.prototype.slice.call(t)); for (var s, n = 0, i = t.length; n < i; n++)(s = t[n]) instanceof HTMLElement && (l(s), 0 < s.children.length && e(s.children)) }, upgradeAllRegistered: function () { for (var e = 0; e < C.length; e++)o(C[e].className) }, registerUpgradedCallback: function (e, t) { var s = u(e); s && s.callbacks.push(t) }, register: function (e) { var t = !0; void 0 === e.widget && void 0 === e.widget || (t = e.widget || e.widget); var s = { classConstructor: e.constructor || e.constructor, className: e.classAsString || e.classAsString, cssClass: e.cssClass || e.cssClass, widget: t, callbacks: [] }; if (C.forEach(function (e) { if (e.cssClass === s.cssClass) throw new Error("The provided cssClass has already been registered: " + e.cssClass); if (e.className === s.className) throw new Error("The provided className has already been registered") }), e.constructor.prototype.hasOwnProperty(v)) throw new Error("MDL component classes must not have " + v + " defined as a property."); u(e.classAsString, s) || C.push(s) }, downgradeElements: function (e) { var t = function (t) { E.filter(function (e) { return e.element_ === t }).forEach(n) }; if (e instanceof Array || e instanceof NodeList) for (var s = 0; s < e.length; s++)t(e[s]); else { if (!(e instanceof Node)) throw new Error("Invalid argument provided to downgrade MDL nodes."); t(e) } } } }()).ComponentConfigPublic, r.ComponentConfig, r.Component, r.upgradeDom = r.upgradeDom, r.upgradeElement = r.upgradeElement, r.upgradeElements = r.upgradeElements, r.upgradeAllRegistered = r.upgradeAllRegistered, r.registerUpgradedCallback = r.registerUpgradedCallback, r.register = r.register, r.downgradeElements = r.downgradeElements, window.componentHandler = r, window.componentHandler = r, window.addEventListener("load", function () { "classList" in document.createElement("div") && "querySelector" in document && "addEventListener" in window && Array.prototype.forEach ? (document.documentElement.classList.add("mdl-js"), r.upgradeAllRegistered()) : (r.upgradeElement = function () { }, r.register = function () { }) }), Date.now || (Date.now = function () { return (new Date).getTime() }, Date.now = Date.now); for (var e = ["webkit", "moz"], s = 0; s < e.length && !window.requestAnimationFrame; ++s) { var n = e[s]; window.requestAnimationFrame = window[n + "RequestAnimationFrame"], window.cancelAnimationFrame = window[n + "CancelAnimationFrame"] || window[n + "CancelRequestAnimationFrame"], window.requestAnimationFrame = window.requestAnimationFrame, window.cancelAnimationFrame = window.cancelAnimationFrame } if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) { var i = 0; window.requestAnimationFrame = function (e) { var t = Date.now(), s = Math.max(i + 16, t); return setTimeout(function () { e(i = s) }, s - t) }, window.cancelAnimationFrame = clearTimeout, window.requestAnimationFrame = window.requestAnimationFrame, window.cancelAnimationFrame = window.cancelAnimationFrame } var a = function (e) { this.element_ = e, this.init() }; (window.MaterialButton = a).prototype.Constant_ = {}, a.prototype.CssClasses_ = { RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_CONTAINER: "mdl-button__ripple-container", RIPPLE: "mdl-ripple" }, a.prototype.blurHandler_ = function (e) { e && this.element_.blur() }, a.prototype.disable = a.prototype.disable = function () { this.element_.disabled = !0 }, a.prototype.enable = a.prototype.enable = function () { this.element_.disabled = !1 }, a.prototype.init = function () { if (this.element_) { if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) { var e = document.createElement("span"); e.classList.add(this.CssClasses_.RIPPLE_CONTAINER), this.rippleElement_ = document.createElement("span"), this.rippleElement_.classList.add(this.CssClasses_.RIPPLE), e.appendChild(this.rippleElement_), this.boundRippleBlurHandler = this.blurHandler_.bind(this), this.rippleElement_.addEventListener("mouseup", this.boundRippleBlurHandler), this.element_.appendChild(e) } this.boundButtonBlurHandler = this.blurHandler_.bind(this), this.element_.addEventListener("mouseup", this.boundButtonBlurHandler), this.element_.addEventListener("mouseleave", this.boundButtonBlurHandler) } }, r.register({ constructor: a, classAsString: "MaterialButton", cssClass: "mdl-js-button", widget: !0 }); var o = function (e) { this.element_ = e, this.init() }; (window.MaterialCheckbox = o).prototype.Constant_ = { TINY_TIMEOUT: .001 }, o.prototype.CssClasses_ = { INPUT: "mdl-checkbox__input", BOX_OUTLINE: "mdl-checkbox__box-outline", FOCUS_HELPER: "mdl-checkbox__focus-helper", TICK_OUTLINE: "mdl-checkbox__tick-outline", RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", RIPPLE_CONTAINER: "mdl-checkbox__ripple-container", RIPPLE_CENTER: "mdl-ripple--center", RIPPLE: "mdl-ripple", IS_FOCUSED: "is-focused", IS_DISABLED: "is-disabled", IS_CHECKED: "is-checked", IS_UPGRADED: "is-upgraded" }, o.prototype.onChange_ = function (e) { this.updateClasses_() }, o.prototype.onFocus_ = function (e) { this.element_.classList.add(this.CssClasses_.IS_FOCUSED) }, o.prototype.onBlur_ = function (e) { this.element_.classList.remove(this.CssClasses_.IS_FOCUSED) }, o.prototype.onMouseUp_ = function (e) { this.blur_() }, o.prototype.updateClasses_ = function () { this.checkDisabled(), this.checkToggleState() }, o.prototype.blur_ = function () { window.setTimeout(function () { this.inputElement_.blur() }.bind(this), this.Constant_.TINY_TIMEOUT) }, o.prototype.checkToggleState = o.prototype.checkToggleState = function () { this.inputElement_.checked ? this.element_.classList.add(this.CssClasses_.IS_CHECKED) : this.element_.classList.remove(this.CssClasses_.IS_CHECKED) }, o.prototype.checkDisabled = o.prototype.checkDisabled = function () { this.inputElement_.disabled ? this.element_.classList.add(this.CssClasses_.IS_DISABLED) : this.element_.classList.remove(this.CssClasses_.IS_DISABLED) }, o.prototype.disable = o.prototype.disable = function () { this.inputElement_.disabled = !0, this.updateClasses_() }, o.prototype.enable = o.prototype.enable = function () { this.inputElement_.disabled = !1, this.updateClasses_() }, o.prototype.check = o.prototype.check = function () { this.inputElement_.checked = !0, this.updateClasses_() }, o.prototype.uncheck = o.prototype.uncheck = function () { this.inputElement_.checked = !1, this.updateClasses_() }, o.prototype.init = function () { if (this.element_) { this.inputElement_ = this.element_.querySelector("." + this.CssClasses_.INPUT); var e = document.createElement("span"); e.classList.add(this.CssClasses_.BOX_OUTLINE); var t = document.createElement("span"); t.classList.add(this.CssClasses_.FOCUS_HELPER); var s = document.createElement("span"); if (s.classList.add(this.CssClasses_.TICK_OUTLINE), e.appendChild(s), this.element_.appendChild(t), this.element_.appendChild(e), this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) { this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS), this.rippleContainerElement_ = document.createElement("span"), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER), this.boundRippleMouseUp = this.onMouseUp_.bind(this), this.rippleContainerElement_.addEventListener("mouseup", this.boundRippleMouseUp); var n = document.createElement("span"); n.classList.add(this.CssClasses_.RIPPLE), this.rippleContainerElement_.appendChild(n), this.element_.appendChild(this.rippleContainerElement_) } this.boundInputOnChange = this.onChange_.bind(this), this.boundInputOnFocus = this.onFocus_.bind(this), this.boundInputOnBlur = this.onBlur_.bind(this), this.boundElementMouseUp = this.onMouseUp_.bind(this), this.inputElement_.addEventListener("change", this.boundInputOnChange), this.inputElement_.addEventListener("focus", this.boundInputOnFocus), this.inputElement_.addEventListener("blur", this.boundInputOnBlur), this.element_.addEventListener("mouseup", this.boundElementMouseUp), this.updateClasses_(), this.element_.classList.add(this.CssClasses_.IS_UPGRADED) } }, r.register({ constructor: o, classAsString: "MaterialCheckbox", cssClass: "mdl-js-checkbox", widget: !0 }); var l = function (e) { this.element_ = e, this.init() }; (window.MaterialIconToggle = l).prototype.Constant_ = { TINY_TIMEOUT: .001 }, l.prototype.CssClasses_ = { INPUT: "mdl-icon-toggle__input", JS_RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", RIPPLE_CONTAINER: "mdl-icon-toggle__ripple-container", RIPPLE_CENTER: "mdl-ripple--center", RIPPLE: "mdl-ripple", IS_FOCUSED: "is-focused", IS_DISABLED: "is-disabled", IS_CHECKED: "is-checked" }, l.prototype.onChange_ = function (e) { this.updateClasses_() }, l.prototype.onFocus_ = function (e) { this.element_.classList.add(this.CssClasses_.IS_FOCUSED) }, l.prototype.onBlur_ = function (e) { this.element_.classList.remove(this.CssClasses_.IS_FOCUSED) }, l.prototype.onMouseUp_ = function (e) { this.blur_() }, l.prototype.updateClasses_ = function () { this.checkDisabled(), this.checkToggleState() }, l.prototype.blur_ = function () { window.setTimeout(function () { this.inputElement_.blur() }.bind(this), this.Constant_.TINY_TIMEOUT) }, l.prototype.checkToggleState = l.prototype.checkToggleState = function () { this.inputElement_.checked ? this.element_.classList.add(this.CssClasses_.IS_CHECKED) : this.element_.classList.remove(this.CssClasses_.IS_CHECKED) }, l.prototype.checkDisabled = l.prototype.checkDisabled = function () { this.inputElement_.disabled ? this.element_.classList.add(this.CssClasses_.IS_DISABLED) : this.element_.classList.remove(this.CssClasses_.IS_DISABLED) }, l.prototype.disable = l.prototype.disable = function () { this.inputElement_.disabled = !0, this.updateClasses_() }, l.prototype.enable = l.prototype.enable = function () { this.inputElement_.disabled = !1, this.updateClasses_() }, l.prototype.check = l.prototype.check = function () { this.inputElement_.checked = !0, this.updateClasses_() }, l.prototype.uncheck = l.prototype.uncheck = function () { this.inputElement_.checked = !1, this.updateClasses_() }, l.prototype.init = function () { if (this.element_) { if (this.inputElement_ = this.element_.querySelector("." + this.CssClasses_.INPUT), this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) { this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS), this.rippleContainerElement_ = document.createElement("span"), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER), this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER), this.boundRippleMouseUp = this.onMouseUp_.bind(this), this.rippleContainerElement_.addEventListener("mouseup", this.boundRippleMouseUp); var e = document.createElement("span"); e.classList.add(this.CssClasses_.RIPPLE), this.rippleContainerElement_.appendChild(e), this.element_.appendChild(this.rippleContainerElement_) } this.boundInputOnChange = this.onChange_.bind(this), this.boundInputOnFocus = this.onFocus_.bind(this), this.boundInputOnBlur = this.onBlur_.bind(this), this.boundElementOnMouseUp = this.onMouseUp_.bind(this), this.inputElement_.addEventListener("change", this.boundInputOnChange), this.inputElement_.addEventListener("focus", this.boundInputOnFocus), this.inputElement_.addEventListener("blur", this.boundInputOnBlur), this.element_.addEventListener("mouseup", this.boundElementOnMouseUp), this.updateClasses_(), this.element_.classList.add("is-upgraded") } }, r.register({ constructor: l, classAsString: "MaterialIconToggle", cssClass: "mdl-js-icon-toggle", widget: !0 }); var d = function (e) { this.element_ = e, this.init() }; (window.MaterialMenu = d).prototype.Constant_ = { TRANSITION_DURATION_SECONDS: .3, TRANSITION_DURATION_FRACTION: .8, CLOSE_TIMEOUT: 150 }, d.prototype.Keycodes_ = { ENTER: 13, ESCAPE: 27, SPACE: 32, UP_ARROW: 38, DOWN_ARROW: 40 }, d.prototype.CssClasses_ = { CONTAINER: "mdl-menu__container", OUTLINE: "mdl-menu__outline", ITEM: "mdl-menu__item", ITEM_RIPPLE_CONTAINER: "mdl-menu__item-ripple-container", RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", RIPPLE: "mdl-ripple", IS_UPGRADED: "is-upgraded", IS_VISIBLE: "is-visible", IS_ANIMATING: "is-animating", BOTTOM_LEFT: "mdl-menu--bottom-left", BOTTOM_RIGHT: "mdl-menu--bottom-right", TOP_LEFT: "mdl-menu--top-left", TOP_RIGHT: "mdl-menu--top-right", UNALIGNED: "mdl-menu--unaligned" }, d.prototype.init = function () { if (this.element_) { var e = document.createElement("div"); e.classList.add(this.CssClasses_.CONTAINER), this.element_.parentElement.insertBefore(e, this.element_), this.element_.parentElement.removeChild(this.element_), e.appendChild(this.element_), this.container_ = e; var t = document.createElement("div"); t.classList.add(this.CssClasses_.OUTLINE), this.outline_ = t, e.insertBefore(t, this.element_); var s = this.element_.getAttribute("for") || this.element_.getAttribute("data-mdl-for"), n = null; s && ((n = document.getElementById(s)) && ((this.forElement_ = n).addEventListener("click", this.handleForClick_.bind(this)), n.addEventListener("keydown", this.handleForKeyboardEvent_.bind(this)))); var i = this.element_.querySelectorAll("." + this.CssClasses_.ITEM); this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this), this.boundItemClick_ = this.handleItemClick_.bind(this); for (var r = 0; r < i.length; r++)i[r].addEventListener("click", this.boundItemClick_), i[r].tabIndex = "-1", i[r].addEventListener("keydown", this.boundItemKeydown_); if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) for (this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS), r = 0; r < i.length; r++) { var a = i[r], o = document.createElement("span"); o.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER); var l = document.createElement("span"); l.classList.add(this.CssClasses_.RIPPLE), o.appendChild(l), a.appendChild(o), a.classList.add(this.CssClasses_.RIPPLE_EFFECT) } this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT) && this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT), this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT) && this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT), this.element_.classList.contains(this.CssClasses_.TOP_LEFT) && this.outline_.classList.add(this.CssClasses_.TOP_LEFT), this.element_.classList.contains(this.CssClasses_.TOP_RIGHT) && this.outline_.classList.add(this.CssClasses_.TOP_RIGHT), this.element_.classList.contains(this.CssClasses_.UNALIGNED) && this.outline_.classList.add(this.CssClasses_.UNALIGNED), e.classList.add(this.CssClasses_.IS_UPGRADED) } }, d.prototype.handleForClick_ = function (e) { if (this.element_ && this.forElement_) { var t = this.forElement_.getBoundingClientRect(), s = this.forElement_.parentElement.getBoundingClientRect(); this.element_.classList.contains(this.CssClasses_.UNALIGNED) || (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT) ? (this.container_.style.right = s.right - t.right + "px", this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + "px") : this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ? (this.container_.style.left = this.forElement_.offsetLeft + "px", this.container_.style.bottom = s.bottom - t.top + "px") : this.element_.classList.contains(this.CssClasses_.TOP_RIGHT) ? (this.container_.style.right = s.right - t.right + "px", this.container_.style.bottom = s.bottom - t.top + "px") : (this.container_.style.left = this.forElement_.offsetLeft + "px", this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + "px")) } this.toggle(e) }, d.prototype.handleForKeyboardEvent_ = function (e) { if (this.element_ && this.container_ && this.forElement_) { var t = this.element_.querySelectorAll("." + this.CssClasses_.ITEM + ":not([disabled])"); t && 0 < t.length && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE) && (e.keyCode === this.Keycodes_.UP_ARROW ? (e.preventDefault(), t[t.length - 1].focus()) : e.keyCode === this.Keycodes_.DOWN_ARROW && (e.preventDefault(), t[0].focus())) } }, d.prototype.handleItemKeyboardEvent_ = function (e) { if (this.element_ && this.container_) { var t = this.element_.querySelectorAll("." + this.CssClasses_.ITEM + ":not([disabled])"); if (t && 0 < t.length && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) { var s = Array.prototype.slice.call(t).indexOf(e.target); if (e.keyCode === this.Keycodes_.UP_ARROW) e.preventDefault(), 0 < s ? t[s - 1].focus() : t[t.length - 1].focus(); else if (e.keyCode === this.Keycodes_.DOWN_ARROW) e.preventDefault(), t.length > s + 1 ? t[s + 1].focus() : t[0].focus(); else if (e.keyCode === this.Keycodes_.SPACE || e.keyCode === this.Keycodes_.ENTER) { e.preventDefault(); var n = new MouseEvent("mousedown"); e.target.dispatchEvent(n), n = new MouseEvent("mouseup"), e.target.dispatchEvent(n), e.target.click() } else e.keyCode === this.Keycodes_.ESCAPE && (e.preventDefault(), this.hide()) } } }, d.prototype.handleItemClick_ = function (e) { e.target.hasAttribute("disabled") ? e.stopPropagation() : (this.closing_ = !0, window.setTimeout(function (e) { this.hide(), this.closing_ = !1 }.bind(this), this.Constant_.CLOSE_TIMEOUT)) }, d.prototype.applyClip_ = function (e, t) { this.element_.classList.contains(this.CssClasses_.UNALIGNED) ? this.element_.style.clip = "" : this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT) ? this.element_.style.clip = "rect(0 " + t + "px 0 " + t + "px)" : this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ? this.element_.style.clip = "rect(" + e + "px 0 " + e + "px 0)" : this.element_.classList.contains(this.CssClasses_.TOP_RIGHT) ? this.element_.style.clip = "rect(" + e + "px " + t + "px " + e + "px " + t + "px)" : this.element_.style.clip = "" }, d.prototype.removeAnimationEndListener_ = function (e) { e.target.classList.remove(d.prototype.CssClasses_.IS_ANIMATING) }, d.prototype.addAnimationEndListener_ = function () { this.element_.addEventListener("transitionend", this.removeAnimationEndListener_), this.element_.addEventListener("webkitTransitionEnd", this.removeAnimationEndListener_) }, d.prototype.show = d.prototype.show = function (t) { if (this.element_ && this.container_ && this.outline_) { var e = this.element_.getBoundingClientRect().height, s = this.element_.getBoundingClientRect().width; this.container_.style.width = s + "px", this.container_.style.height = e + "px", this.outline_.style.width = s + "px", this.outline_.style.height = e + "px"; for (var n = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION, i = this.element_.querySelectorAll("." + this.CssClasses_.ITEM), r = 0; r < i.length; r++) { var a; a = this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT) ? (e - i[r].offsetTop - i[r].offsetHeight) / e * n + "s" : i[r].offsetTop / e * n + "s", i[r].style.transitionDelay = a } this.applyClip_(e, s), window.requestAnimationFrame(function () { this.element_.classList.add(this.CssClasses_.IS_ANIMATING), this.element_.style.clip = "rect(0 " + s + "px " + e + "px 0)", this.container_.classList.add(this.CssClasses_.IS_VISIBLE) }.bind(this)), this.addAnimationEndListener_(); var o = function (e) { e === t || this.closing_ || e.target.parentNode === this.element_ || (document.removeEventListener("click", o), this.hide()) }.bind(this); document.addEventListener("click", o) } }, d.prototype.hide = d.prototype.hide = function () { if (this.element_ && this.container_ && this.outline_) { for (var e = this.element_.querySelectorAll("." + this.CssClasses_.ITEM), t = 0; t < e.length; t++)e[t].style.removeProperty("transition-delay"); var s = this.element_.getBoundingClientRect(), n = s.height, i = s.width; this.element_.classList.add(this.CssClasses_.IS_ANIMATING), this.applyClip_(n, i), this.container_.classList.remove(this.CssClasses_.IS_VISIBLE), this.addAnimationEndListener_() } }, d.prototype.toggle = d.prototype.toggle = function (e) { this.container_.classList.contains(this.CssClasses_.IS_VISIBLE) ? this.hide() : this.show(e) }, r.register({ constructor: d, classAsString: "MaterialMenu", cssClass: "mdl-js-menu", widget: !0 }); var c = function (e) { this.element_ = e, this.init() }; (window.MaterialProgress = c).prototype.Constant_ = {}, c.prototype.CssClasses_ = { INDETERMINATE_CLASS: "mdl-progress__indeterminate" }, c.prototype.setProgress = c.prototype.setProgress = function (e) { this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS) || (this.progressbar_.style.width = e + "%") }, c.prototype.setBuffer = c.prototype.setBuffer = function (e) { this.bufferbar_.style.width = e + "%", this.auxbar_.style.width = 100 - e + "%" }, c.prototype.init = function () { if (this.element_) { var e = document.createElement("div"); e.className = "progressbar bar bar1", this.element_.appendChild(e), this.progressbar_ = e, (e = document.createElement("div")).className = "bufferbar bar bar2", this.element_.appendChild(e), this.bufferbar_ = e, (e = document.createElement("div")).className = "auxbar bar bar3", this.element_.appendChild(e), this.auxbar_ = e, this.progressbar_.style.width = "0%", this.bufferbar_.style.width = "100%", this.auxbar_.style.width = "0%", this.element_.classList.add("is-upgraded") } }, r.register({ constructor: c, classAsString: "MaterialProgress", cssClass: "mdl-js-progress", widget: !0 }); var h = function (e) { this.element_ = e, this.init() }; (window.MaterialRadio = h).prototype.Constant_ = { TINY_TIMEOUT: .001 }, h.prototype.CssClasses_ = { IS_FOCUSED: "is-focused", IS_DISABLED: "is-disabled", IS_CHECKED: "is-checked", IS_UPGRADED: "is-upgraded", JS_RADIO: "mdl-js-radio", RADIO_BTN: "mdl-radio__button", RADIO_OUTER_CIRCLE: "mdl-radio__outer-circle", RADIO_INNER_CIRCLE: "mdl-radio__inner-circle", RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", RIPPLE_CONTAINER: "mdl-radio__ripple-container", RIPPLE_CENTER: "mdl-ripple--center", RIPPLE: "mdl-ripple" }, h.prototype.onChange_ = function (e) { for (var t = document.getElementsByClassName(this.CssClasses_.JS_RADIO), s = 0; s < t.length; s++) { t[s].querySelector("." + this.CssClasses_.RADIO_BTN).getAttribute("name") === this.btnElement_.getAttribute("name") && void 0 !== t[s].MaterialRadio && t[s].MaterialRadio.updateClasses_() } }, h.prototype.onFocus_ = function (e) { this.element_.classList.add(this.CssClasses_.IS_FOCUSED) }, h.prototype.onBlur_ = function (e) { this.element_.classList.remove(this.CssClasses_.IS_FOCUSED) }, h.prototype.onMouseup_ = function (e) { this.blur_() }, h.prototype.updateClasses_ = function () { this.checkDisabled(), this.checkToggleState() }, h.prototype.blur_ = function () { window.setTimeout(function () { this.btnElement_.blur() }.bind(this), this.Constant_.TINY_TIMEOUT) }, h.prototype.checkDisabled = h.prototype.checkDisabled = function () { this.btnElement_.disabled ? this.element_.classList.add(this.CssClasses_.IS_DISABLED) : this.element_.classList.remove(this.CssClasses_.IS_DISABLED) }, h.prototype.checkToggleState = h.prototype.checkToggleState = function () { this.btnElement_.checked ? this.element_.classList.add(this.CssClasses_.IS_CHECKED) : this.element_.classList.remove(this.CssClasses_.IS_CHECKED) }, h.prototype.disable = h.prototype.disable = function () { this.btnElement_.disabled = !0, this.updateClasses_() }, h.prototype.enable = h.prototype.enable = function () { this.btnElement_.disabled = !1, this.updateClasses_() }, h.prototype.check = h.prototype.check = function () { this.btnElement_.checked = !0, this.onChange_(null) }, h.prototype.uncheck = h.prototype.uncheck = function () { this.btnElement_.checked = !1, this.onChange_(null) }, h.prototype.init = function () { if (this.element_) { this.btnElement_ = this.element_.querySelector("." + this.CssClasses_.RADIO_BTN), this.boundChangeHandler_ = this.onChange_.bind(this), this.boundFocusHandler_ = this.onChange_.bind(this), this.boundBlurHandler_ = this.onBlur_.bind(this), this.boundMouseUpHandler_ = this.onMouseup_.bind(this); var e = document.createElement("span"); e.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE); var t, s = document.createElement("span"); if (s.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE), this.element_.appendChild(e), this.element_.appendChild(s), this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) { this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS), (t = document.createElement("span")).classList.add(this.CssClasses_.RIPPLE_CONTAINER), t.classList.add(this.CssClasses_.RIPPLE_EFFECT), t.classList.add(this.CssClasses_.RIPPLE_CENTER), t.addEventListener("mouseup", this.boundMouseUpHandler_); var n = document.createElement("span"); n.classList.add(this.CssClasses_.RIPPLE), t.appendChild(n), this.element_.appendChild(t) } this.btnElement_.addEventListener("change", this.boundChangeHandler_), this.btnElement_.addEventListener("focus", this.boundFocusHandler_), this.btnElement_.addEventListener("blur", this.boundBlurHandler_), this.element_.addEventListener("mouseup", this.boundMouseUpHandler_), this.updateClasses_(), this.element_.classList.add(this.CssClasses_.IS_UPGRADED) } }, r.register({ constructor: h, classAsString: "MaterialRadio", cssClass: "mdl-js-radio", widget: !0 }); var _ = function (e) { this.element_ = e, this.isIE_ = window.navigator.msPointerEnabled, this.init() }; (window.MaterialSlider = _).prototype.Constant_ = {}, _.prototype.CssClasses_ = { IE_CONTAINER: "mdl-slider__ie-container", SLIDER_CONTAINER: "mdl-slider__container", BACKGROUND_FLEX: "mdl-slider__background-flex", BACKGROUND_LOWER: "mdl-slider__background-lower", BACKGROUND_UPPER: "mdl-slider__background-upper", IS_LOWEST_VALUE: "is-lowest-value", IS_UPGRADED: "is-upgraded" }, _.prototype.onInput_ = function (e) { this.updateValueStyles_() }, _.prototype.onChange_ = function (e) { this.updateValueStyles_() }, _.prototype.onMouseUp_ = function (e) { e.target.blur() }, _.prototype.onContainerMouseDown_ = function (e) { if (e.target === this.element_.parentElement) { e.preventDefault(); var t = new MouseEvent("mousedown", { target: e.target, buttons: e.buttons, clientX: e.clientX, clientY: this.element_.getBoundingClientRect().y }); this.element_.dispatchEvent(t) } }, _.prototype.updateValueStyles_ = function () { var e = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min); 0 === e ? this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE) : this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE), this.isIE_ || (this.backgroundLower_.style.flex = e, this.backgroundLower_.style.webkitFlex = e, this.backgroundUpper_.style.flex = 1 - e, this.backgroundUpper_.style.webkitFlex = 1 - e) }, _.prototype.disable = _.prototype.disable = function () { this.element_.disabled = !0 }, _.prototype.enable = _.prototype.enable = function () { this.element_.disabled = !1 }, _.prototype.change = _.prototype.change = function (e) { void 0 !== e && (this.element_.value = e), this.updateValueStyles_() }, _.prototype.init = function () { if (this.element_) { if (this.isIE_) { var e = document.createElement("div"); e.classList.add(this.CssClasses_.IE_CONTAINER), this.element_.parentElement.insertBefore(e, this.element_), this.element_.parentElement.removeChild(this.element_), e.appendChild(this.element_) } else { var t = document.createElement("div"); t.classList.add(this.CssClasses_.SLIDER_CONTAINER), this.element_.parentElement.insertBefore(t, this.element_), this.element_.parentElement.removeChild(this.element_), t.appendChild(this.element_); var s = document.createElement("div"); s.classList.add(this.CssClasses_.BACKGROUND_FLEX), t.appendChild(s), this.backgroundLower_ = document.createElement("div"), this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER), s.appendChild(this.backgroundLower_), this.backgroundUpper_ = document.createElement("div"), this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER), s.appendChild(this.backgroundUpper_) } this.boundInputHandler = this.onInput_.bind(this), this.boundChangeHandler = this.onChange_.bind(this), this.boundMouseUpHandler = this.onMouseUp_.bind(this), this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this), this.element_.addEventListener("input", this.boundInputHandler), this.element_.addEventListener("change", this.boundChangeHandler), this.element_.addEventListener("mouseup", this.boundMouseUpHandler), this.element_.parentElement.addEventListener("mousedown", this.boundContainerMouseDownHandler), this.updateValueStyles_(), this.element_.classList.add(this.CssClasses_.IS_UPGRADED) } }, r.register({ constructor: _, classAsString: "MaterialSlider", cssClass: "mdl-js-slider", widget: !0 }); var u = function (e) { if (this.element_ = e, this.textElement_ = this.element_.querySelector("." + this.cssClasses_.MESSAGE), this.actionElement_ = this.element_.querySelector("." + this.cssClasses_.ACTION), !this.textElement_) throw new Error("There must be a message element for a snackbar."); if (!this.actionElement_) throw new Error("There must be an action element for a snackbar."); this.active = !1, this.actionHandler_ = void 0, this.message_ = void 0, this.actionText_ = void 0, this.queuedNotifications_ = [], this.setActionHidden_(!0) }; (window.MaterialSnackbar = u).prototype.Constant_ = { ANIMATION_LENGTH: 250 }, u.prototype.cssClasses_ = { SNACKBAR: "mdl-snackbar", MESSAGE: "mdl-snackbar__text", ACTION: "mdl-snackbar__action", ACTIVE: "mdl-snackbar--active" }, u.prototype.displaySnackbar_ = function () { this.element_.setAttribute("aria-hidden", "true"), this.actionHandler_ && (this.actionElement_.textContent = this.actionText_, this.actionElement_.addEventListener("click", this.actionHandler_), this.setActionHidden_(!1)), this.textElement_.textContent = this.message_, this.element_.classList.add(this.cssClasses_.ACTIVE), this.element_.setAttribute("aria-hidden", "false"), setTimeout(this.cleanup_.bind(this), this.timeout_) }, u.prototype.showSnackbar = u.prototype.showSnackbar = function (e) { if (void 0 === e) throw new Error("Please provide a data object with at least a message to display."); if (void 0 === e.message) throw new Error("Please provide a message to be displayed."); if (e.actionHandler && !e.actionText) throw new Error("Please provide action text with the handler."); this.active ? this.queuedNotifications_.push(e) : (this.active = !0, this.message_ = e.message, e.timeout ? this.timeout_ = e.timeout : this.timeout_ = 2750, e.actionHandler && (this.actionHandler_ = e.actionHandler), e.actionText && (this.actionText_ = e.actionText), this.displaySnackbar_()) }, u.prototype.checkQueue_ = function () { 0 < this.queuedNotifications_.length && this.showSnackbar(this.queuedNotifications_.shift()) }, u.prototype.cleanup_ = function () { this.element_.classList.remove(this.cssClasses_.ACTIVE), setTimeout(function () { this.element_.setAttribute("aria-hidden", "true"), this.textElement_.textContent = "", Boolean(this.actionElement_.getAttribute("aria-hidden")) || (this.setActionHidden_(!0), this.actionElement_.textContent = "", this.actionElement_.removeEventListener("click", this.actionHandler_)), this.actionHandler_ = void 0, this.message_ = void 0, this.actionText_ = void 0, this.active = !1, this.checkQueue_() }.bind(this), this.Constant_.ANIMATION_LENGTH) }, u.prototype.setActionHidden_ = function (e) { e ? this.actionElement_.setAttribute("aria-hidden", "true") : this.actionElement_.removeAttribute("aria-hidden") }, r.register({ constructor: u, classAsString: "MaterialSnackbar", cssClass: "mdl-js-snackbar", widget: !0 }); var p = function (e) { this.element_ = e, this.init() }; (window.MaterialSpinner = p).prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 }, p.prototype.CssClasses_ = { MDL_SPINNER_LAYER: "mdl-spinner__layer", MDL_SPINNER_CIRCLE_CLIPPER: "mdl-spinner__circle-clipper", MDL_SPINNER_CIRCLE: "mdl-spinner__circle", MDL_SPINNER_GAP_PATCH: "mdl-spinner__gap-patch", MDL_SPINNER_LEFT: "mdl-spinner__left", MDL_SPINNER_RIGHT: "mdl-spinner__right" }, p.prototype.createLayer = p.prototype.createLayer = function (e) { var t = document.createElement("div"); t.classList.add(this.CssClasses_.MDL_SPINNER_LAYER), t.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + "-" + e); var s = document.createElement("div"); s.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER), s.classList.add(this.CssClasses_.MDL_SPINNER_LEFT); var n = document.createElement("div"); n.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH); var i = document.createElement("div"); i.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER), i.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT); for (var r = [s, n, i], a = 0; a < r.length; a++) { var o = document.createElement("div"); o.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE), r[a].appendChild(o) } t.appendChild(s), t.appendChild(n), t.appendChild(i), this.element_.appendChild(t) }, p.prototype.stop = p.prototype.stop = function () { this.element_.classList.remove("is-active") }, p.prototype.start = p.prototype.start = function () { this.element_.classList.add("is-active") }, p.prototype.init = function () { if (this.element_) { for (var e = 1; e <= this.Constant_.MDL_SPINNER_LAYER_COUNT; e++)this.createLayer(e); this.element_.classList.add("is-upgraded") } }, r.register({ constructor: p, classAsString: "MaterialSpinner", cssClass: "mdl-js-spinner", widget: !0 }); var f = function (e) { this.element_ = e, this.init() }; (window.MaterialSwitch = f).prototype.Constant_ = { TINY_TIMEOUT: .001 }, f.prototype.CssClasses_ = { INPUT: "mdl-switch__input", TRACK: "mdl-switch__track", THUMB: "mdl-switch__thumb", FOCUS_HELPER: "mdl-switch__focus-helper", RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", RIPPLE_CONTAINER: "mdl-switch__ripple-container", RIPPLE_CENTER: "mdl-ripple--center", RIPPLE: "mdl-ripple", IS_FOCUSED: "is-focused", IS_DISABLED: "is-disabled", IS_CHECKED: "is-checked" }, f.prototype.onChange_ = function (e) { this.updateClasses_() }, f.prototype.onFocus_ = function (e) { this.element_.classList.add(this.CssClasses_.IS_FOCUSED) }, f.prototype.onBlur_ = function (e) { this.element_.classList.remove(this.CssClasses_.IS_FOCUSED) }, f.prototype.onMouseUp_ = function (e) { this.blur_() }, f.prototype.updateClasses_ = function () { this.checkDisabled(), this.checkToggleState() }, f.prototype.blur_ = function () { window.setTimeout(function () { this.inputElement_.blur() }.bind(this), this.Constant_.TINY_TIMEOUT) }, f.prototype.checkDisabled = f.prototype.checkDisabled = function () { this.inputElement_.disabled ? this.element_.classList.add(this.CssClasses_.IS_DISABLED) : this.element_.classList.remove(this.CssClasses_.IS_DISABLED) }, f.prototype.checkToggleState = f.prototype.checkToggleState = function () { this.inputElement_.checked ? this.element_.classList.add(this.CssClasses_.IS_CHECKED) : this.element_.classList.remove(this.CssClasses_.IS_CHECKED) }, f.prototype.disable = f.prototype.disable = function () { this.inputElement_.disabled = !0, this.updateClasses_() }, f.prototype.enable = f.prototype.enable = function () { this.inputElement_.disabled = !1, this.updateClasses_() }, f.prototype.on = f.prototype.on = function () { this.inputElement_.checked = !0, this.updateClasses_() }, f.prototype.off = f.prototype.off = function () { this.inputElement_.checked = !1, this.updateClasses_() }, f.prototype.init = function () { if (this.element_) { this.inputElement_ = this.element_.querySelector("." + this.CssClasses_.INPUT); var e = document.createElement("div"); e.classList.add(this.CssClasses_.TRACK); var t = document.createElement("div"); t.classList.add(this.CssClasses_.THUMB); var s = document.createElement("span"); if (s.classList.add(this.CssClasses_.FOCUS_HELPER), t.appendChild(s), this.element_.appendChild(e), this.element_.appendChild(t), this.boundMouseUpHandler = this.onMouseUp_.bind(this), this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) { this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS), this.rippleContainerElement_ = document.createElement("span"), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT), this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER), this.rippleContainerElement_.addEventListener("mouseup", this.boundMouseUpHandler); var n = document.createElement("span"); n.classList.add(this.CssClasses_.RIPPLE), this.rippleContainerElement_.appendChild(n), this.element_.appendChild(this.rippleContainerElement_) } this.boundChangeHandler = this.onChange_.bind(this), this.boundFocusHandler = this.onFocus_.bind(this), this.boundBlurHandler = this.onBlur_.bind(this), this.inputElement_.addEventListener("change", this.boundChangeHandler), this.inputElement_.addEventListener("focus", this.boundFocusHandler), this.inputElement_.addEventListener("blur", this.boundBlurHandler), this.element_.addEventListener("mouseup", this.boundMouseUpHandler), this.updateClasses_(), this.element_.classList.add("is-upgraded") } }, r.register({ constructor: f, classAsString: "MaterialSwitch", cssClass: "mdl-js-switch", widget: !0 }); var m = function (e) { this.element_ = e, this.init() }; (window.MaterialTabs = m).prototype.Constant_ = {}, m.prototype.CssClasses_ = { TAB_CLASS: "mdl-tabs__tab", PANEL_CLASS: "mdl-tabs__panel", ACTIVE_CLASS: "is-active", UPGRADED_CLASS: "is-upgraded", MDL_JS_RIPPLE_EFFECT: "mdl-js-ripple-effect", MDL_RIPPLE_CONTAINER: "mdl-tabs__ripple-container", MDL_RIPPLE: "mdl-ripple", MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events" }, m.prototype.initTabs_ = function () { this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT) && this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS), this.tabs_ = this.element_.querySelectorAll("." + this.CssClasses_.TAB_CLASS), this.panels_ = this.element_.querySelectorAll("." + this.CssClasses_.PANEL_CLASS); for (var e = 0; e < this.tabs_.length; e++)new t(this.tabs_[e], this); this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS) }, m.prototype.resetTabState_ = function () { for (var e = 0; e < this.tabs_.length; e++)this.tabs_[e].classList.remove(this.CssClasses_.ACTIVE_CLASS) }, m.prototype.resetPanelState_ = function () { for (var e = 0; e < this.panels_.length; e++)this.panels_[e].classList.remove(this.CssClasses_.ACTIVE_CLASS) }, m.prototype.init = function () { this.element_ && this.initTabs_() }, r.register({ constructor: m, classAsString: "MaterialTabs", cssClass: "mdl-js-tabs" }); var C = function (e) { this.element_ = e, this.maxRows = this.Constant_.NO_MAX_ROWS, this.init() }; (window.MaterialTextfield = C).prototype.Constant_ = { NO_MAX_ROWS: -1, MAX_ROWS_ATTRIBUTE: "maxrows" }, C.prototype.CssClasses_ = { LABEL: "mdl-textfield__label", INPUT: "mdl-textfield__input", IS_DIRTY: "is-dirty", IS_FOCUSED: "is-focused", IS_DISABLED: "is-disabled", IS_INVALID: "is-invalid", IS_UPGRADED: "is-upgraded", HAS_PLACEHOLDER: "has-placeholder" }, C.prototype.onKeyDown_ = function (e) { var t = e.target.value.split("\n").length; 13 === e.keyCode && t >= this.maxRows && e.preventDefault() }, C.prototype.onFocus_ = function (e) { this.element_.classList.add(this.CssClasses_.IS_FOCUSED) }, C.prototype.onBlur_ = function (e) { this.element_.classList.remove(this.CssClasses_.IS_FOCUSED) }, C.prototype.onReset_ = function (e) { this.updateClasses_() }, C.prototype.updateClasses_ = function () { this.checkDisabled(), this.checkValidity(), this.checkDirty(), this.checkFocus() }, C.prototype.checkDisabled = C.prototype.checkDisabled = function () { this.input_.disabled ? this.element_.classList.add(this.CssClasses_.IS_DISABLED) : this.element_.classList.remove(this.CssClasses_.IS_DISABLED) }, C.prototype.checkFocus = C.prototype.checkFocus = function () { Boolean(this.element_.querySelector(":focus")) ? this.element_.classList.add(this.CssClasses_.IS_FOCUSED) : this.element_.classList.remove(this.CssClasses_.IS_FOCUSED) }, C.prototype.checkValidity = C.prototype.checkValidity = function () { this.input_.validity && (this.input_.validity.valid ? this.element_.classList.remove(this.CssClasses_.IS_INVALID) : this.element_.classList.add(this.CssClasses_.IS_INVALID)) }, C.prototype.checkDirty = C.prototype.checkDirty = function () { this.input_.value && 0 < this.input_.value.length ? this.element_.classList.add(this.CssClasses_.IS_DIRTY) : this.element_.classList.remove(this.CssClasses_.IS_DIRTY) }, C.prototype.disable = C.prototype.disable = function () { this.input_.disabled = !0, this.updateClasses_() }, C.prototype.enable = C.prototype.enable = function () { this.input_.disabled = !1, this.updateClasses_() }, C.prototype.change = C.prototype.change = function (e) { this.input_.value = e || "", this.updateClasses_() }, C.prototype.init = function () { if (this.element_ && (this.label_ = this.element_.querySelector("." + this.CssClasses_.LABEL), this.input_ = this.element_.querySelector("." + this.CssClasses_.INPUT), this.input_)) { this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE) && (this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10), isNaN(this.maxRows) && (this.maxRows = this.Constant_.NO_MAX_ROWS)), this.input_.hasAttribute("placeholder") && this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER), this.boundUpdateClassesHandler = this.updateClasses_.bind(this), this.boundFocusHandler = this.onFocus_.bind(this), this.boundBlurHandler = this.onBlur_.bind(this), this.boundResetHandler = this.onReset_.bind(this), this.input_.addEventListener("input", this.boundUpdateClassesHandler), this.input_.addEventListener("focus", this.boundFocusHandler), this.input_.addEventListener("blur", this.boundBlurHandler), this.input_.addEventListener("reset", this.boundResetHandler), this.maxRows !== this.Constant_.NO_MAX_ROWS && (this.boundKeyDownHandler = this.onKeyDown_.bind(this), this.input_.addEventListener("keydown", this.boundKeyDownHandler)); var e = this.element_.classList.contains(this.CssClasses_.IS_INVALID); this.updateClasses_(), this.element_.classList.add(this.CssClasses_.IS_UPGRADED), e && this.element_.classList.add(this.CssClasses_.IS_INVALID), this.input_.hasAttribute("autofocus") && (this.element_.focus(), this.checkFocus()) } }, r.register({ constructor: C, classAsString: "MaterialTextfield", cssClass: "mdl-js-textfield", widget: !0 }); var E = function (e) { this.element_ = e, this.init() }; (window.MaterialTooltip = E).prototype.Constant_ = {}, E.prototype.CssClasses_ = { IS_ACTIVE: "is-active", BOTTOM: "mdl-tooltip--bottom", LEFT: "mdl-tooltip--left", RIGHT: "mdl-tooltip--right", TOP: "mdl-tooltip--top" }, E.prototype.handleMouseEnter_ = function (e) { var t = e.target.getBoundingClientRect(), s = t.left + t.width / 2, n = t.top + t.height / 2, i = this.element_.offsetWidth / 2 * -1, r = this.element_.offsetHeight / 2 * -1; this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT) ? (s = t.width / 2, n + r < 0 ? (this.element_.style.top = "0", this.element_.style.marginTop = "0") : (this.element_.style.top = n + "px", this.element_.style.marginTop = r + "px")) : s + i < 0 ? (this.element_.style.left = "0", this.element_.style.marginLeft = "0") : (this.element_.style.left = s + "px", this.element_.style.marginLeft = i + "px"), this.element_.classList.contains(this.CssClasses_.TOP) ? this.element_.style.top = t.top - this.element_.offsetHeight - 10 + "px" : this.element_.classList.contains(this.CssClasses_.RIGHT) ? this.element_.style.left = t.left + t.width + 10 + "px" : this.element_.classList.contains(this.CssClasses_.LEFT) ? this.element_.style.left = t.left - this.element_.offsetWidth - 10 + "px" : this.element_.style.top = t.top + t.height + 10 + "px", this.element_.classList.add(this.CssClasses_.IS_ACTIVE) }, E.prototype.hideTooltip_ = function () { this.element_.classList.remove(this.CssClasses_.IS_ACTIVE) }, E.prototype.init = function () { if (this.element_) { var e = this.element_.getAttribute("for") || this.element_.getAttribute("data-mdl-for"); e && (this.forElement_ = document.getElementById(e)), this.forElement_ && (this.forElement_.hasAttribute("tabindex") || this.forElement_.setAttribute("tabindex", "0"), this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this), this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this), this.forElement_.addEventListener("mouseenter", this.boundMouseEnterHandler, !1), this.forElement_.addEventListener("touchend", this.boundMouseEnterHandler, !1), this.forElement_.addEventListener("mouseleave", this.boundMouseLeaveAndScrollHandler, !1), window.addEventListener("scroll", this.boundMouseLeaveAndScrollHandler, !0), window.addEventListener("touchstart", this.boundMouseLeaveAndScrollHandler)) } }, r.register({ constructor: E, classAsString: "MaterialTooltip", cssClass: "mdl-tooltip" }); var v = function (e) { this.element_ = e, this.init() }; (window.MaterialLayout = v).prototype.Constant_ = { MAX_WIDTH: "(max-width: 1024px)", TAB_SCROLL_PIXELS: 100, RESIZE_TIMEOUT: 100, MENU_ICON: "&#xE5D2;", CHEVRON_LEFT: "chevron_left", CHEVRON_RIGHT: "chevron_right" }, v.prototype.Keycodes_ = { ENTER: 13, ESCAPE: 27, SPACE: 32 }, v.prototype.Mode_ = { STANDARD: 0, SEAMED: 1, WATERFALL: 2, SCROLL: 3 }, v.prototype.CssClasses_ = { CONTAINER: "mdl-layout__container", HEADER: "mdl-layout__header", DRAWER: "mdl-layout__drawer", CONTENT: "mdl-layout__content", DRAWER_BTN: "mdl-layout__drawer-button", ICON: "material-icons", JS_RIPPLE_EFFECT: "mdl-js-ripple-effect", RIPPLE_CONTAINER: "mdl-layout__tab-ripple-container", RIPPLE: "mdl-ripple", RIPPLE_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", HEADER_SEAMED: "mdl-layout__header--seamed", HEADER_WATERFALL: "mdl-layout__header--waterfall", HEADER_SCROLL: "mdl-layout__header--scroll", FIXED_HEADER: "mdl-layout--fixed-header", OBFUSCATOR: "mdl-layout__obfuscator", TAB_BAR: "mdl-layout__tab-bar", TAB_CONTAINER: "mdl-layout__tab-bar-container", TAB: "mdl-layout__tab", TAB_BAR_BUTTON: "mdl-layout__tab-bar-button", TAB_BAR_LEFT_BUTTON: "mdl-layout__tab-bar-left-button", TAB_BAR_RIGHT_BUTTON: "mdl-layout__tab-bar-right-button", TAB_MANUAL_SWITCH: "mdl-layout__tab-manual-switch", PANEL: "mdl-layout__tab-panel", HAS_DRAWER: "has-drawer", HAS_TABS: "has-tabs", HAS_SCROLLING_HEADER: "has-scrolling-header", CASTING_SHADOW: "is-casting-shadow", IS_COMPACT: "is-compact", IS_SMALL_SCREEN: "is-small-screen", IS_DRAWER_OPEN: "is-visible", IS_ACTIVE: "is-active", IS_UPGRADED: "is-upgraded", IS_ANIMATING: "is-animating", ON_LARGE_SCREEN: "mdl-layout--large-screen-only", ON_SMALL_SCREEN: "mdl-layout--small-screen-only" }, v.prototype.contentScrollHandler_ = function () { if (!this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) { var e = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER); 0 < this.content_.scrollTop && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT) ? (this.header_.classList.add(this.CssClasses_.CASTING_SHADOW), this.header_.classList.add(this.CssClasses_.IS_COMPACT), e && this.header_.classList.add(this.CssClasses_.IS_ANIMATING)) : this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT) && (this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW), this.header_.classList.remove(this.CssClasses_.IS_COMPACT), e && this.header_.classList.add(this.CssClasses_.IS_ANIMATING)) } }, v.prototype.keyboardEventHandler_ = function (e) { e.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN) && this.toggleDrawer() }, v.prototype.screenSizeHandler_ = function () { this.screenSizeMediaQuery_.matches ? this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN) : (this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN), this.drawer_ && (this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN), this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN))) }, v.prototype.drawerToggleHandler_ = function (e) { if (e && "keydown" === e.type) { if (e.keyCode !== this.Keycodes_.SPACE && e.keyCode !== this.Keycodes_.ENTER) return; e.preventDefault() } this.toggleDrawer() }, v.prototype.headerTransitionEndHandler_ = function () { this.header_.classList.remove(this.CssClasses_.IS_ANIMATING) }, v.prototype.headerClickHandler_ = function () { this.header_.classList.contains(this.CssClasses_.IS_COMPACT) && (this.header_.classList.remove(this.CssClasses_.IS_COMPACT), this.header_.classList.add(this.CssClasses_.IS_ANIMATING)) }, v.prototype.resetTabState_ = function (e) { for (var t = 0; t < e.length; t++)e[t].classList.remove(this.CssClasses_.IS_ACTIVE) }, v.prototype.resetPanelState_ = function (e) { for (var t = 0; t < e.length; t++)e[t].classList.remove(this.CssClasses_.IS_ACTIVE) }, v.prototype.toggleDrawer = v.prototype.toggleDrawer = function () { var e = this.element_.querySelector("." + this.CssClasses_.DRAWER_BTN); this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN), this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN), this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN) ? (this.drawer_.setAttribute("aria-hidden", "false"), e.setAttribute("aria-expanded", "true")) : (this.drawer_.setAttribute("aria-hidden", "true"), e.setAttribute("aria-expanded", "false")) }, v.prototype.init = function () { if (this.element_) { var e = document.createElement("div"); e.classList.add(this.CssClasses_.CONTAINER); var t = this.element_.querySelector(":focus"); this.element_.parentElement.insertBefore(e, this.element_), this.element_.parentElement.removeChild(this.element_), e.appendChild(this.element_), t && t.focus(); for (var s = this.element_.childNodes, n = s.length, i = 0; i < n; i++) { var r = s[i]; r.classList && r.classList.contains(this.CssClasses_.HEADER) && (this.header_ = r), r.classList && r.classList.contains(this.CssClasses_.DRAWER) && (this.drawer_ = r), r.classList && r.classList.contains(this.CssClasses_.CONTENT) && (this.content_ = r) } window.addEventListener("pageshow", function (e) { e.persisted && (this.element_.style.overflowY = "hidden", requestAnimationFrame(function () { this.element_.style.overflowY = "" }.bind(this))) }.bind(this), !1), this.header_ && (this.tabBar_ = this.header_.querySelector("." + this.CssClasses_.TAB_BAR)); var a = this.Mode_.STANDARD; if (this.header_ && (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED) ? a = this.Mode_.SEAMED : this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL) ? (a = this.Mode_.WATERFALL, this.header_.addEventListener("transitionend", this.headerTransitionEndHandler_.bind(this)), this.header_.addEventListener("click", this.headerClickHandler_.bind(this))) : this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL) && (a = this.Mode_.SCROLL, e.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER)), a === this.Mode_.STANDARD ? (this.header_.classList.add(this.CssClasses_.CASTING_SHADOW), this.tabBar_ && this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW)) : a === this.Mode_.SEAMED || a === this.Mode_.SCROLL ? (this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW), this.tabBar_ && this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW)) : a === this.Mode_.WATERFALL && (this.content_.addEventListener("scroll", this.contentScrollHandler_.bind(this)), this.contentScrollHandler_())), this.drawer_) { var o = this.element_.querySelector("." + this.CssClasses_.DRAWER_BTN); if (!o) { (o = document.createElement("div")).setAttribute("aria-expanded", "false"), o.setAttribute("role", "button"), o.setAttribute("tabindex", "0"), o.classList.add(this.CssClasses_.DRAWER_BTN); var l = document.createElement("i"); l.classList.add(this.CssClasses_.ICON), l.innerHTML = this.Constant_.MENU_ICON, o.appendChild(l) } this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN) ? o.classList.add(this.CssClasses_.ON_LARGE_SCREEN) : this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN) && o.classList.add(this.CssClasses_.ON_SMALL_SCREEN), o.addEventListener("click", this.drawerToggleHandler_.bind(this)), o.addEventListener("keydown", this.drawerToggleHandler_.bind(this)), this.element_.classList.add(this.CssClasses_.HAS_DRAWER), this.element_.classList.contains(this.CssClasses_.FIXED_HEADER) ? this.header_.insertBefore(o, this.header_.firstChild) : this.element_.insertBefore(o, this.content_); var d = document.createElement("div"); d.classList.add(this.CssClasses_.OBFUSCATOR), this.element_.appendChild(d), d.addEventListener("click", this.drawerToggleHandler_.bind(this)), this.obfuscator_ = d, this.drawer_.addEventListener("keydown", this.keyboardEventHandler_.bind(this)), this.drawer_.setAttribute("aria-hidden", "true") } if (this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH), this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this)), this.screenSizeHandler_(), this.header_ && this.tabBar_) { this.element_.classList.add(this.CssClasses_.HAS_TABS); var c = document.createElement("div"); c.classList.add(this.CssClasses_.TAB_CONTAINER), this.header_.insertBefore(c, this.tabBar_), this.header_.removeChild(this.tabBar_); var h = document.createElement("div"); h.classList.add(this.CssClasses_.TAB_BAR_BUTTON), h.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON); var _ = document.createElement("i"); _.classList.add(this.CssClasses_.ICON), _.textContent = this.Constant_.CHEVRON_LEFT, h.appendChild(_), h.addEventListener("click", function () { this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS }.bind(this)); var u = document.createElement("div"); u.classList.add(this.CssClasses_.TAB_BAR_BUTTON), u.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON); var p = document.createElement("i"); p.classList.add(this.CssClasses_.ICON), p.textContent = this.Constant_.CHEVRON_RIGHT, u.appendChild(p), u.addEventListener("click", function () { this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS }.bind(this)), c.appendChild(h), c.appendChild(this.tabBar_), c.appendChild(u); var f = function () { 0 < this.tabBar_.scrollLeft ? h.classList.add(this.CssClasses_.IS_ACTIVE) : h.classList.remove(this.CssClasses_.IS_ACTIVE), this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth ? u.classList.add(this.CssClasses_.IS_ACTIVE) : u.classList.remove(this.CssClasses_.IS_ACTIVE) }.bind(this); this.tabBar_.addEventListener("scroll", f), f(); var m = function () { this.resizeTimeoutId_ && clearTimeout(this.resizeTimeoutId_), this.resizeTimeoutId_ = setTimeout(function () { f(), this.resizeTimeoutId_ = null }.bind(this), this.Constant_.RESIZE_TIMEOUT) }.bind(this); window.addEventListener("resize", m), this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT) && this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS); for (var C = this.tabBar_.querySelectorAll("." + this.CssClasses_.TAB), E = this.content_.querySelectorAll("." + this.CssClasses_.PANEL), v = 0; v < C.length; v++)new b(C[v], C, E, this) } this.element_.classList.add(this.CssClasses_.IS_UPGRADED) } }, window.MaterialLayoutTab = b, r.register({ constructor: v, classAsString: "MaterialLayout", cssClass: "mdl-js-layout" }); var y = function (e) { this.element_ = e, this.init() }; (window.MaterialDataTable = y).prototype.Constant_ = {}, y.prototype.CssClasses_ = { DATA_TABLE: "mdl-data-table", SELECTABLE: "mdl-data-table--selectable", SELECT_ELEMENT: "mdl-data-table__select", IS_SELECTED: "is-selected", IS_UPGRADED: "is-upgraded" }, y.prototype.selectRow_ = function (t, e, s) { return e ? function () { t.checked ? e.classList.add(this.CssClasses_.IS_SELECTED) : e.classList.remove(this.CssClasses_.IS_SELECTED) }.bind(this) : s ? function () { var e; if (t.checked) for (e = 0; e < s.length; e++)s[e].querySelector("td").querySelector(".mdl-checkbox").MaterialCheckbox.check(), s[e].classList.add(this.CssClasses_.IS_SELECTED); else for (e = 0; e < s.length; e++)s[e].querySelector("td").querySelector(".mdl-checkbox").MaterialCheckbox.uncheck(), s[e].classList.remove(this.CssClasses_.IS_SELECTED) }.bind(this) : void 0 }, y.prototype.createCheckbox_ = function (e, t) { var s = document.createElement("label"), n = ["mdl-checkbox", "mdl-js-checkbox", "mdl-js-ripple-effect", this.CssClasses_.SELECT_ELEMENT]; s.className = n.join(" "); var i = document.createElement("input"); return i.type = "checkbox", i.classList.add("mdl-checkbox__input"), e ? (i.checked = e.classList.contains(this.CssClasses_.IS_SELECTED), i.addEventListener("change", this.selectRow_(i, e))) : t && i.addEventListener("change", this.selectRow_(i, null, t)), s.appendChild(i), r.upgradeElement(s, "MaterialCheckbox"), s }, y.prototype.init = function () { if (this.element_) { var e = this.element_.querySelector("th"), t = Array.prototype.slice.call(this.element_.querySelectorAll("tbody tr")), s = Array.prototype.slice.call(this.element_.querySelectorAll("tfoot tr")), n = t.concat(s); if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) { var i = document.createElement("th"), r = this.createCheckbox_(null, n); i.appendChild(r), e.parentElement.insertBefore(i, e); for (var a = 0; a < n.length; a++) { var o = n[a].querySelector("td"); if (o) { var l = document.createElement("td"); if ("TBODY" === n[a].parentNode.nodeName.toUpperCase()) { var d = this.createCheckbox_(n[a]); l.appendChild(d) } n[a].insertBefore(l, o) } } this.element_.classList.add(this.CssClasses_.IS_UPGRADED) } } }, r.register({ constructor: y, classAsString: "MaterialDataTable", cssClass: "mdl-js-data-table" }); var I = function (e) { this.element_ = e, this.init() }; (window.MaterialRipple = I).prototype.Constant_ = { INITIAL_SCALE: "scale(0.0001, 0.0001)", INITIAL_SIZE: "1px", INITIAL_OPACITY: "0.4", FINAL_OPACITY: "0", FINAL_SCALE: "" }, I.prototype.CssClasses_ = { RIPPLE_CENTER: "mdl-ripple--center", RIPPLE_EFFECT_IGNORE_EVENTS: "mdl-js-ripple-effect--ignore-events", RIPPLE: "mdl-ripple", IS_ANIMATING: "is-animating", IS_VISIBLE: "is-visible" }, I.prototype.downHandler_ = function (e) { if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) { var t = this.element_.getBoundingClientRect(); this.boundHeight = t.height, this.boundWidth = t.width, this.rippleSize_ = 2 * Math.sqrt(t.width * t.width + t.height * t.height) + 2, this.rippleElement_.style.width = this.rippleSize_ + "px", this.rippleElement_.style.height = this.rippleSize_ + "px" } if (this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE), "mousedown" === e.type && this.ignoringMouseDown_) this.ignoringMouseDown_ = !1; else { if ("touchstart" === e.type && (this.ignoringMouseDown_ = !0), 0 < this.getFrameCount()) return; this.setFrameCount(1); var s, n, i = e.currentTarget.getBoundingClientRect(); if (0 === e.clientX && 0 === e.clientY) s = Math.round(i.width / 2), n = Math.round(i.height / 2); else { var r = void 0 !== e.clientX ? e.clientX : e.touches[0].clientX, a = void 0 !== e.clientY ? e.clientY : e.touches[0].clientY; s = Math.round(r - i.left), n = Math.round(a - i.top) } this.setRippleXY(s, n), this.setRippleStyles(!0), window.requestAnimationFrame(this.animFrameHandler.bind(this)) } }, I.prototype.upHandler_ = function (e) { e && 2 !== e.detail && window.setTimeout(function () { this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE) }.bind(this), 0) }, I.prototype.init = function () { if (this.element_) { var i = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER); this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS) || (this.rippleElement_ = this.element_.querySelector("." + this.CssClasses_.RIPPLE), this.frameCount_ = 0, this.rippleSize_ = 0, this.x_ = 0, this.y_ = 0, this.ignoringMouseDown_ = !1, this.boundDownHandler = this.downHandler_.bind(this), this.element_.addEventListener("mousedown", this.boundDownHandler), this.element_.addEventListener("touchstart", this.boundDownHandler), this.boundUpHandler = this.upHandler_.bind(this), this.element_.addEventListener("mouseup", this.boundUpHandler), this.element_.addEventListener("mouseleave", this.boundUpHandler), this.element_.addEventListener("touchend", this.boundUpHandler), this.element_.addEventListener("blur", this.boundUpHandler), this.getFrameCount = function () { return this.frameCount_ }, this.setFrameCount = function (e) { this.frameCount_ = e }, this.getRippleElement = function () { return this.rippleElement_ }, this.setRippleXY = function (e, t) { this.x_ = e, this.y_ = t }, this.setRippleStyles = function (e) { if (null !== this.rippleElement_) { var t, s, n = "translate(" + this.x_ + "px, " + this.y_ + "px)"; e ? (s = this.Constant_.INITIAL_SCALE, this.Constant_.INITIAL_SIZE) : (s = this.Constant_.FINAL_SCALE, this.rippleSize_ + "px", i && (n = "translate(" + this.boundWidth / 2 + "px, " + this.boundHeight / 2 + "px)")), t = "translate(-50%, -50%) " + n + s, this.rippleElement_.style.webkitTransform = t, this.rippleElement_.style.msTransform = t, this.rippleElement_.style.transform = t, e ? this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING) : this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING) } }, this.animFrameHandler = function () { 0 < this.frameCount_-- ? window.requestAnimationFrame(this.animFrameHandler.bind(this)) : this.setRippleStyles(!1) }) } }, r.register({ constructor: I, classAsString: "MaterialRipple", cssClass: "mdl-js-ripple-effect", widget: !1 }) }();